<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1414" onload="init(evt)" viewBox="0 0 1200 1414" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1414.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1397" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1397" > </text>
<g id="frames">
<g >
<title>PyThread_acquire_lock (42,963,051 samples, 0.04%)</title><rect x="55.9" y="949" width="0.5" height="15.0" fill="rgb(223,203,25)" rx="2" ry="2" />
<text  x="58.94" y="959.5" ></text>
</g>
<g >
<title>PyObject_CallFunction (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="1189" width="0.2" height="15.0" fill="rgb(209,143,32)" rx="2" ry="2" />
<text  x="1192.81" y="1199.5" ></text>
</g>
<g >
<title>list_contains (116,342,552,019 samples, 95.98%)</title><rect x="57.2" y="1109" width="1132.6" height="15.0" fill="rgb(210,152,23)" rx="2" ry="2" />
<text  x="60.19" y="1119.5" >list_contains</text>
</g>
<g >
<title>pyinit_main (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="1253" width="0.2" height="15.0" fill="rgb(229,148,12)" rx="2" ry="2" />
<text  x="1192.81" y="1263.5" ></text>
</g>
<g >
<title>py::FrozenImporter.exec_module:&lt;frozen importlib._bootstrap&gt; (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="661" width="0.2" height="15.0" fill="rgb(244,161,31)" rx="2" ry="2" />
<text  x="1192.81" y="671.5" ></text>
</g>
<g >
<title>PyObject_CallOneArg (1,029,879,089 samples, 0.85%)</title><rect x="46.7" y="1061" width="10.1" height="15.0" fill="rgb(246,23,39)" rx="2" ry="2" />
<text  x="49.75" y="1071.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (42,913,400 samples, 0.04%)</title><rect x="776.8" y="1093" width="0.5" height="15.0" fill="rgb(232,70,17)" rx="2" ry="2" />
<text  x="779.84" y="1103.5" ></text>
</g>
<g >
<title>__irqentry_text_end (43,546,649 samples, 0.04%)</title><rect x="32.1" y="1045" width="0.4" height="15.0" fill="rgb(246,167,15)" rx="2" ry="2" />
<text  x="35.07" y="1055.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="773" width="0.2" height="15.0" fill="rgb(229,208,45)" rx="2" ry="2" />
<text  x="1192.81" y="783.5" ></text>
</g>
<g >
<title>__alloc_pages (87,468,606 samples, 0.07%)</title><rect x="32.5" y="917" width="0.8" height="15.0" fill="rgb(214,39,28)" rx="2" ry="2" />
<text  x="35.50" y="927.5" ></text>
</g>
<g >
<title>_bufferedwriter_flush_unlocked (901,179,896 samples, 0.74%)</title><rect x="46.7" y="949" width="8.8" height="15.0" fill="rgb(240,74,44)" rx="2" ry="2" />
<text  x="49.75" y="959.5" ></text>
</g>
<g >
<title>_bufferedwriter_raw_write (901,179,896 samples, 0.74%)</title><rect x="46.7" y="933" width="8.8" height="15.0" fill="rgb(254,210,16)" rx="2" ry="2" />
<text  x="49.75" y="943.5" ></text>
</g>
<g >
<title>pymain_main (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="1301" width="0.2" height="15.0" fill="rgb(244,16,4)" rx="2" ry="2" />
<text  x="1192.81" y="1311.5" ></text>
</g>
<g >
<title>Py_FinalizeEx (1,492,561,816 samples, 1.23%)</title><rect x="10.0" y="1285" width="14.5" height="15.0" fill="rgb(250,134,6)" rx="2" ry="2" />
<text  x="13.00" y="1295.5" ></text>
</g>
<g >
<title>_PyDict_GetItemWithError (42,762,073 samples, 0.04%)</title><rect x="56.8" y="1077" width="0.4" height="15.0" fill="rgb(242,30,37)" rx="2" ry="2" />
<text  x="59.77" y="1087.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="261" width="0.2" height="15.0" fill="rgb(243,41,25)" rx="2" ry="2" />
<text  x="1192.81" y="271.5" ></text>
</g>
<g >
<title>handle_mm_fault (215,674,643 samples, 0.18%)</title><rect x="37.1" y="1061" width="2.1" height="15.0" fill="rgb(229,151,49)" rx="2" ry="2" />
<text  x="40.13" y="1071.5" ></text>
</g>
<g >
<title>_PyObject_GC_New (42,813,898 samples, 0.04%)</title><rect x="46.3" y="1029" width="0.4" height="15.0" fill="rgb(250,178,32)" rx="2" ry="2" />
<text  x="49.33" y="1039.5" ></text>
</g>
<g >
<title>Py_BytesMain (121,209,905,865 samples, 100.00%)</title><rect x="10.0" y="1317" width="1180.0" height="15.0" fill="rgb(219,136,41)" rx="2" ry="2" />
<text  x="13.00" y="1327.5" >Py_BytesMain</text>
</g>
<g >
<title>exc_page_fault (311,909,745 samples, 0.26%)</title><rect x="34.1" y="1045" width="3.0" height="15.0" fill="rgb(214,5,49)" rx="2" ry="2" />
<text  x="37.09" y="1055.5" ></text>
</g>
<g >
<title>clear_page_rep (43,666,378 samples, 0.04%)</title><rect x="32.5" y="885" width="0.4" height="15.0" fill="rgb(221,39,17)" rx="2" ry="2" />
<text  x="35.50" y="895.5" ></text>
</g>
<g >
<title>__smp_call_single_queue (42,996,891 samples, 0.04%)</title><rect x="54.3" y="549" width="0.4" height="15.0" fill="rgb(230,97,50)" rx="2" ry="2" />
<text  x="57.27" y="559.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (42,960,366 samples, 0.04%)</title><rect x="55.1" y="853" width="0.4" height="15.0" fill="rgb(234,32,13)" rx="2" ry="2" />
<text  x="58.10" y="863.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (119,697,365,071 samples, 98.75%)</title><rect x="24.5" y="1205" width="1165.3" height="15.0" fill="rgb(242,154,16)" rx="2" ry="2" />
<text  x="27.53" y="1215.5" >PyEval_EvalCode</text>
</g>
<g >
<title>irqentry_exit (76,690,069 samples, 0.06%)</title><rect x="33.3" y="1013" width="0.8" height="15.0" fill="rgb(213,227,14)" rx="2" ry="2" />
<text  x="36.35" y="1023.5" ></text>
</g>
<g >
<title>tty_write (558,371,070 samples, 0.46%)</title><rect x="49.2" y="757" width="5.5" height="15.0" fill="rgb(251,117,47)" rx="2" ry="2" />
<text  x="52.25" y="767.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="357" width="0.2" height="15.0" fill="rgb(230,138,11)" rx="2" ry="2" />
<text  x="1192.81" y="367.5" ></text>
</g>
<g >
<title>PyObject_GetAttr (42,813,898 samples, 0.04%)</title><rect x="46.3" y="1077" width="0.4" height="15.0" fill="rgb(213,90,49)" rx="2" ry="2" />
<text  x="49.33" y="1087.5" ></text>
</g>
<g >
<title>_PyObject_GC_New (42,760,415 samples, 0.04%)</title><rect x="46.7" y="901" width="0.5" height="15.0" fill="rgb(246,169,40)" rx="2" ry="2" />
<text  x="49.75" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (1,509,831,796 samples, 1.25%)</title><rect x="24.5" y="1125" width="14.7" height="15.0" fill="rgb(251,116,6)" rx="2" ry="2" />
<text  x="27.53" y="1135.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (43,011,014 samples, 0.04%)</title><rect x="776.4" y="1029" width="0.4" height="15.0" fill="rgb(218,172,4)" rx="2" ry="2" />
<text  x="779.42" y="1039.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="485" width="0.2" height="15.0" fill="rgb(227,146,48)" rx="2" ry="2" />
<text  x="1192.81" y="495.5" ></text>
</g>
<g >
<title>_io_TextIOWrapper_write (1,029,879,089 samples, 0.85%)</title><rect x="46.7" y="1029" width="10.1" height="15.0" fill="rgb(247,96,23)" rx="2" ry="2" />
<text  x="49.75" y="1039.5" ></text>
</g>
<g >
<title>_textiowrapper_writeflush (128,699,193 samples, 0.11%)</title><rect x="55.5" y="1013" width="1.3" height="15.0" fill="rgb(247,41,39)" rx="2" ry="2" />
<text  x="58.52" y="1023.5" ></text>
</g>
<g >
<title>gc_collect_with_callback (397,925,016 samples, 0.33%)</title><rect x="10.0" y="1253" width="3.9" height="15.0" fill="rgb(254,195,18)" rx="2" ry="2" />
<text  x="13.00" y="1263.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (85,959,082 samples, 0.07%)</title><rect x="775.6" y="1045" width="0.8" height="15.0" fill="rgb(223,5,20)" rx="2" ry="2" />
<text  x="778.58" y="1055.5" ></text>
</g>
<g >
<title>tick_sched_handle (42,962,073 samples, 0.04%)</title><rect x="776.0" y="981" width="0.4" height="15.0" fill="rgb(206,59,10)" rx="2" ry="2" />
<text  x="779.00" y="991.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="965" width="0.2" height="15.0" fill="rgb(248,193,40)" rx="2" ry="2" />
<text  x="1192.81" y="975.5" ></text>
</g>
<g >
<title>__split_huge_pmd (43,771,249 samples, 0.04%)</title><rect x="22.4" y="1013" width="0.4" height="15.0" fill="rgb(236,227,13)" rx="2" ry="2" />
<text  x="25.40" y="1023.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (43,656,201 samples, 0.04%)</title><rect x="23.7" y="981" width="0.4" height="15.0" fill="rgb(242,84,32)" rx="2" ry="2" />
<text  x="26.68" y="991.5" ></text>
</g>
<g >
<title>process_output_block (386,634,751 samples, 0.32%)</title><rect x="50.9" y="693" width="3.8" height="15.0" fill="rgb(208,32,37)" rx="2" ry="2" />
<text  x="53.92" y="703.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="581" width="0.2" height="15.0" fill="rgb(251,176,38)" rx="2" ry="2" />
<text  x="1192.81" y="591.5" ></text>
</g>
<g >
<title>gc_collect_main (397,925,016 samples, 0.33%)</title><rect x="10.0" y="1237" width="3.9" height="15.0" fill="rgb(233,194,24)" rx="2" ry="2" />
<text  x="13.00" y="1247.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (85,677,281 samples, 0.07%)</title><rect x="51.3" y="645" width="0.9" height="15.0" fill="rgb(244,56,37)" rx="2" ry="2" />
<text  x="54.34" y="655.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="549" width="0.2" height="15.0" fill="rgb(241,68,21)" rx="2" ry="2" />
<text  x="1192.81" y="559.5" ></text>
</g>
<g >
<title>method_vectorcall_O (85,721,623 samples, 0.07%)</title><rect x="55.9" y="981" width="0.9" height="15.0" fill="rgb(239,208,48)" rx="2" ry="2" />
<text  x="58.94" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (119,697,365,071 samples, 98.75%)</title><rect x="24.5" y="1173" width="1165.3" height="15.0" fill="rgb(234,116,2)" rx="2" ry="2" />
<text  x="27.53" y="1183.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>__hrtimer_run_queues (85,959,082 samples, 0.07%)</title><rect x="775.6" y="1013" width="0.8" height="15.0" fill="rgb(224,88,35)" rx="2" ry="2" />
<text  x="778.58" y="1023.5" ></text>
</g>
<g >
<title>run_mod (119,697,365,071 samples, 98.75%)</title><rect x="24.5" y="1237" width="1165.3" height="15.0" fill="rgb(218,43,6)" rx="2" ry="2" />
<text  x="27.53" y="1247.5" >run_mod</text>
</g>
<g >
<title>init_interp_main (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="1237" width="0.2" height="15.0" fill="rgb(206,208,50)" rx="2" ry="2" />
<text  x="1192.81" y="1247.5" ></text>
</g>
<g >
<title>_Py_dict_lookup (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="37" width="0.2" height="15.0" fill="rgb(250,224,34)" rx="2" ry="2" />
<text  x="1192.81" y="47.5" ></text>
</g>
<g >
<title>deduce_unreachable (438,871,728 samples, 0.36%)</title><rect x="13.9" y="1221" width="4.2" height="15.0" fill="rgb(209,23,13)" rx="2" ry="2" />
<text  x="16.87" y="1231.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="725" width="0.2" height="15.0" fill="rgb(240,141,0)" rx="2" ry="2" />
<text  x="1192.81" y="735.5" ></text>
</g>
<g >
<title>builtin___import__ (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="1157" width="0.2" height="15.0" fill="rgb(208,21,5)" rx="2" ry="2" />
<text  x="1192.81" y="1167.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="1125" width="0.2" height="15.0" fill="rgb(238,165,19)" rx="2" ry="2" />
<text  x="1192.81" y="1135.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (43,011,014 samples, 0.04%)</title><rect x="776.4" y="1013" width="0.4" height="15.0" fill="rgb(251,27,25)" rx="2" ry="2" />
<text  x="779.42" y="1023.5" ></text>
</g>
<g >
<title>_PyObject_Call_Prepend (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="181" width="0.2" height="15.0" fill="rgb(224,97,2)" rx="2" ry="2" />
<text  x="1192.81" y="191.5" ></text>
</g>
<g >
<title>visit_decref (177,545,856 samples, 0.15%)</title><rect x="10.4" y="1205" width="1.8" height="15.0" fill="rgb(247,34,39)" rx="2" ry="2" />
<text  x="13.42" y="1215.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (311,909,745 samples, 0.26%)</title><rect x="34.1" y="1061" width="3.0" height="15.0" fill="rgb(242,203,13)" rx="2" ry="2" />
<text  x="37.09" y="1071.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (131,038,372 samples, 0.11%)</title><rect x="22.8" y="1045" width="1.3" height="15.0" fill="rgb(244,166,4)" rx="2" ry="2" />
<text  x="25.83" y="1055.5" ></text>
</g>
<g >
<title>py::&lt;module&gt;:/home/pete/go/src/github.com/peter-mcconnell/petermcconnell.com/assets/dummy/perf_py_proj/before.py (119,697,365,071 samples, 98.75%)</title><rect x="24.5" y="1189" width="1165.3" height="15.0" fill="rgb(212,146,15)" rx="2" ry="2" />
<text  x="27.53" y="1199.5" >py::&lt;module&gt;:/home/pete/go/src/github.com/peter-mcconnell/petermcconnell.com/assets/dummy/perf_py_proj/before.py</text>
</g>
<g >
<title>get_page_from_freelist (43,666,378 samples, 0.04%)</title><rect x="32.5" y="901" width="0.4" height="15.0" fill="rgb(241,191,40)" rx="2" ry="2" />
<text  x="35.50" y="911.5" ></text>
</g>
<g >
<title>py::_find_and_load:&lt;frozen importlib._bootstrap&gt; (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="1093" width="0.2" height="15.0" fill="rgb(214,186,2)" rx="2" ry="2" />
<text  x="1192.81" y="1103.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (42,913,400 samples, 0.04%)</title><rect x="776.8" y="997" width="0.5" height="15.0" fill="rgb(208,2,17)" rx="2" ry="2" />
<text  x="779.84" y="1007.5" ></text>
</g>
<g >
<title>Py_RunMain (121,189,926,887 samples, 99.98%)</title><rect x="10.0" y="1301" width="1179.8" height="15.0" fill="rgb(217,181,28)" rx="2" ry="2" />
<text  x="13.00" y="1311.5" >Py_RunMain</text>
</g>
<g >
<title>__mod_zone_page_state (43,666,162 samples, 0.04%)</title><rect x="23.3" y="1013" width="0.4" height="15.0" fill="rgb(215,174,42)" rx="2" ry="2" />
<text  x="26.26" y="1023.5" ></text>
</g>
<g >
<title>__const_udelay (42,722,959 samples, 0.04%)</title><rect x="45.9" y="901" width="0.4" height="15.0" fill="rgb(218,205,23)" rx="2" ry="2" />
<text  x="48.92" y="911.5" ></text>
</g>
<g >
<title>deduce_unreachable (397,925,016 samples, 0.33%)</title><rect x="10.0" y="1221" width="3.9" height="15.0" fill="rgb(211,102,32)" rx="2" ry="2" />
<text  x="13.00" y="1231.5" ></text>
</g>
<g >
<title>update_one_slot (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="69" width="0.2" height="15.0" fill="rgb(228,28,43)" rx="2" ry="2" />
<text  x="1192.81" y="79.5" ></text>
</g>
<g >
<title>python3.12 (121,209,950,652 samples, 100.00%)</title><rect x="10.0" y="1349" width="1180.0" height="15.0" fill="rgb(237,196,43)" rx="2" ry="2" />
<text  x="13.00" y="1359.5" >python3.12</text>
</g>
<g >
<title>list_dealloc (568,277,993 samples, 0.47%)</title><rect x="18.6" y="1189" width="5.5" height="15.0" fill="rgb(248,44,21)" rx="2" ry="2" />
<text  x="21.57" y="1199.5" ></text>
</g>
<g >
<title>lru_cache_add (160,782,555 samples, 0.13%)</title><rect x="37.1" y="981" width="1.6" height="15.0" fill="rgb(249,99,37)" rx="2" ry="2" />
<text  x="40.13" y="991.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="789" width="0.2" height="15.0" fill="rgb(238,57,15)" rx="2" ry="2" />
<text  x="1192.81" y="799.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="405" width="0.2" height="15.0" fill="rgb(211,146,24)" rx="2" ry="2" />
<text  x="1192.81" y="415.5" ></text>
</g>
<g >
<title>builtin_exec (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="629" width="0.2" height="15.0" fill="rgb(227,5,7)" rx="2" ry="2" />
<text  x="1192.81" y="639.5" ></text>
</g>
<g >
<title>method_vectorcall_NOARGS (901,179,896 samples, 0.74%)</title><rect x="46.7" y="997" width="8.8" height="15.0" fill="rgb(232,44,28)" rx="2" ry="2" />
<text  x="49.75" y="1007.5" ></text>
</g>
<g >
<title>free_unref_page_commit.constprop.0 (43,656,201 samples, 0.04%)</title><rect x="23.7" y="997" width="0.4" height="15.0" fill="rgb(229,216,51)" rx="2" ry="2" />
<text  x="26.68" y="1007.5" ></text>
</g>
<g >
<title>available_idle_cpu (85,907,605 samples, 0.07%)</title><rect x="53.4" y="533" width="0.9" height="15.0" fill="rgb(228,197,43)" rx="2" ry="2" />
<text  x="56.43" y="543.5" ></text>
</g>
<g >
<title>PyFile_WriteObject (1,029,879,089 samples, 0.85%)</title><rect x="46.7" y="1077" width="10.1" height="15.0" fill="rgb(239,30,6)" rx="2" ry="2" />
<text  x="49.75" y="1087.5" ></text>
</g>
<g >
<title>method_vectorcall_O (858,419,481 samples, 0.71%)</title><rect x="47.2" y="901" width="8.3" height="15.0" fill="rgb(239,181,42)" rx="2" ry="2" />
<text  x="50.16" y="911.5" ></text>
</g>
<g >
<title>pty_write (386,634,751 samples, 0.32%)</title><rect x="50.9" y="677" width="3.8" height="15.0" fill="rgb(215,40,32)" rx="2" ry="2" />
<text  x="53.92" y="687.5" ></text>
</g>
<g >
<title>account_user_time (42,962,073 samples, 0.04%)</title><rect x="776.0" y="949" width="0.4" height="15.0" fill="rgb(236,57,11)" rx="2" ry="2" />
<text  x="779.00" y="959.5" ></text>
</g>
<g >
<title>queue_work_on (257,981,569 samples, 0.21%)</title><rect x="52.2" y="645" width="2.5" height="15.0" fill="rgb(205,88,54)" rx="2" ry="2" />
<text  x="55.17" y="655.5" ></text>
</g>
<g >
<title>amd_pmu_wait_on_overflow (48,580,038 samples, 0.04%)</title><rect x="36.7" y="853" width="0.4" height="15.0" fill="rgb(245,183,42)" rx="2" ry="2" />
<text  x="39.66" y="863.5" ></text>
</g>
<g >
<title>__schedule (43,011,014 samples, 0.04%)</title><rect x="776.4" y="965" width="0.4" height="15.0" fill="rgb(209,102,4)" rx="2" ry="2" />
<text  x="779.42" y="975.5" ></text>
</g>
<g >
<title>do_syscall_64 (174,809,621 samples, 0.14%)</title><rect x="22.4" y="1141" width="1.7" height="15.0" fill="rgb(250,206,39)" rx="2" ry="2" />
<text  x="25.40" y="1151.5" ></text>
</g>
<g >
<title>list_traverse (43,291,351 samples, 0.04%)</title><rect x="10.0" y="1205" width="0.4" height="15.0" fill="rgb(243,19,17)" rx="2" ry="2" />
<text  x="13.00" y="1215.5" ></text>
</g>
<g >
<title>x86_pmu_disable (48,580,038 samples, 0.04%)</title><rect x="36.7" y="885" width="0.4" height="15.0" fill="rgb(207,50,12)" rx="2" ry="2" />
<text  x="39.66" y="895.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (42,913,400 samples, 0.04%)</title><rect x="776.8" y="1029" width="0.5" height="15.0" fill="rgb(230,65,33)" rx="2" ry="2" />
<text  x="779.84" y="1039.5" ></text>
</g>
<g >
<title>cfunction_call (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="117" width="0.2" height="15.0" fill="rgb(225,47,0)" rx="2" ry="2" />
<text  x="1192.81" y="127.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (48,580,038 samples, 0.04%)</title><rect x="36.7" y="869" width="0.4" height="15.0" fill="rgb(224,119,2)" rx="2" ry="2" />
<text  x="39.66" y="879.5" ></text>
</g>
<g >
<title>buffered_flush (901,179,896 samples, 0.74%)</title><rect x="46.7" y="981" width="8.8" height="15.0" fill="rgb(237,83,42)" rx="2" ry="2" />
<text  x="49.75" y="991.5" ></text>
</g>
<g >
<title>PyObject_RichCompareBool (42,401,747,987 samples, 34.98%)</title><rect x="364.0" y="1093" width="412.8" height="15.0" fill="rgb(247,143,9)" rx="2" ry="2" />
<text  x="367.05" y="1103.5" >PyObject_RichCompareBool</text>
</g>
<g >
<title>_PyGC_CollectNoFail (1,050,979,230 samples, 0.87%)</title><rect x="13.9" y="1253" width="10.2" height="15.0" fill="rgb(205,193,52)" rx="2" ry="2" />
<text  x="16.87" y="1263.5" ></text>
</g>
<g >
<title>handle_pte_fault (87,468,606 samples, 0.07%)</title><rect x="32.5" y="965" width="0.8" height="15.0" fill="rgb(231,51,11)" rx="2" ry="2" />
<text  x="35.50" y="975.5" ></text>
</g>
<g >
<title>do_user_addr_fault (215,674,643 samples, 0.18%)</title><rect x="37.1" y="1077" width="2.1" height="15.0" fill="rgb(249,200,17)" rx="2" ry="2" />
<text  x="40.13" y="1087.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (48,580,038 samples, 0.04%)</title><rect x="36.7" y="917" width="0.4" height="15.0" fill="rgb(242,221,20)" rx="2" ry="2" />
<text  x="39.66" y="927.5" ></text>
</g>
<g >
<title>PyFile_WriteString (1,029,879,089 samples, 0.85%)</title><rect x="46.7" y="1093" width="10.1" height="15.0" fill="rgb(245,188,31)" rx="2" ry="2" />
<text  x="49.75" y="1103.5" ></text>
</g>
<g >
<title>handle_mm_fault (263,329,707 samples, 0.22%)</title><rect x="34.1" y="1013" width="2.6" height="15.0" fill="rgb(206,128,17)" rx="2" ry="2" />
<text  x="37.09" y="1023.5" ></text>
</g>
<g >
<title>visit_reachable (177,087,809 samples, 0.15%)</title><rect x="12.2" y="1205" width="1.7" height="15.0" fill="rgb(236,123,37)" rx="2" ry="2" />
<text  x="15.15" y="1215.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (160,782,555 samples, 0.13%)</title><rect x="37.1" y="997" width="1.6" height="15.0" fill="rgb(216,10,21)" rx="2" ry="2" />
<text  x="40.13" y="1007.5" ></text>
</g>
<g >
<title>__x64_sys_write (644,306,148 samples, 0.53%)</title><rect x="48.8" y="821" width="6.3" height="15.0" fill="rgb(250,87,5)" rx="2" ry="2" />
<text  x="51.83" y="831.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (85,959,082 samples, 0.07%)</title><rect x="775.6" y="1029" width="0.8" height="15.0" fill="rgb(212,117,20)" rx="2" ry="2" />
<text  x="778.58" y="1039.5" ></text>
</g>
<g >
<title>__alloc_pages (263,329,707 samples, 0.22%)</title><rect x="34.1" y="933" width="2.6" height="15.0" fill="rgb(220,128,27)" rx="2" ry="2" />
<text  x="37.09" y="943.5" ></text>
</g>
<g >
<title>tp_new_wrapper (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="101" width="0.2" height="15.0" fill="rgb(244,170,26)" rx="2" ry="2" />
<text  x="1192.81" y="111.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="869" width="0.2" height="15.0" fill="rgb(230,208,48)" rx="2" ry="2" />
<text  x="1192.81" y="879.5" ></text>
</g>
<g >
<title>__split_vma (43,771,249 samples, 0.04%)</title><rect x="22.4" y="1077" width="0.4" height="15.0" fill="rgb(213,182,18)" rx="2" ry="2" />
<text  x="25.40" y="1087.5" ></text>
</g>
<g >
<title>__handle_mm_fault (160,782,555 samples, 0.13%)</title><rect x="37.1" y="1045" width="1.6" height="15.0" fill="rgb(230,177,0)" rx="2" ry="2" />
<text  x="40.13" y="1055.5" ></text>
</g>
<g >
<title>_PyRun_SimpleFileObject (119,697,365,071 samples, 98.75%)</title><rect x="24.5" y="1269" width="1165.3" height="15.0" fill="rgb(208,189,14)" rx="2" ry="2" />
<text  x="27.53" y="1279.5" >_PyRun_SimpleFileObject</text>
</g>
<g >
<title>PyImport_ImportModule (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="1221" width="0.2" height="15.0" fill="rgb(219,102,44)" rx="2" ry="2" />
<text  x="1192.81" y="1231.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (42,722,959 samples, 0.04%)</title><rect x="45.9" y="1045" width="0.4" height="15.0" fill="rgb(225,121,17)" rx="2" ry="2" />
<text  x="48.92" y="1055.5" ></text>
</g>
<g >
<title>object_vacall (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="821" width="0.2" height="15.0" fill="rgb(236,169,46)" rx="2" ry="2" />
<text  x="1192.81" y="831.5" ></text>
</g>
<g >
<title>py::FrozenImporter.exec_module:&lt;frozen importlib._bootstrap&gt; (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="373" width="0.2" height="15.0" fill="rgb(249,171,27)" rx="2" ry="2" />
<text  x="1192.81" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (85,959,082 samples, 0.07%)</title><rect x="775.6" y="1077" width="0.8" height="15.0" fill="rgb(235,207,44)" rx="2" ry="2" />
<text  x="778.58" y="1087.5" ></text>
</g>
<g >
<title>insertdict (43,657,570 samples, 0.04%)</title><rect x="24.1" y="1237" width="0.4" height="15.0" fill="rgb(205,104,53)" rx="2" ry="2" />
<text  x="27.11" y="1247.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_O (1,029,879,089 samples, 0.85%)</title><rect x="46.7" y="1045" width="10.1" height="15.0" fill="rgb(253,14,50)" rx="2" ry="2" />
<text  x="49.75" y="1055.5" ></text>
</g>
<g >
<title>PyObject_CallMethodObjArgs (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="837" width="0.2" height="15.0" fill="rgb(210,38,46)" rx="2" ry="2" />
<text  x="1192.81" y="847.5" ></text>
</g>
<g >
<title>py::&lt;module&gt;:&lt;frozen site&gt; (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="885" width="0.2" height="15.0" fill="rgb(236,16,51)" rx="2" ry="2" />
<text  x="1192.81" y="895.5" ></text>
</g>
<g >
<title>_raw_spin_lock (42,997,009 samples, 0.04%)</title><rect x="775.6" y="981" width="0.4" height="15.0" fill="rgb(223,4,35)" rx="2" ry="2" />
<text  x="778.58" y="991.5" ></text>
</g>
<g >
<title>unmap_region (131,038,372 samples, 0.11%)</title><rect x="22.8" y="1077" width="1.3" height="15.0" fill="rgb(208,101,7)" rx="2" ry="2" />
<text  x="25.83" y="1087.5" ></text>
</g>
<g >
<title>file_tty_write.constprop.0 (558,371,070 samples, 0.46%)</title><rect x="49.2" y="741" width="5.5" height="15.0" fill="rgb(214,63,53)" rx="2" ry="2" />
<text  x="52.25" y="751.5" ></text>
</g>
<g >
<title>slot_tp_new (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="197" width="0.2" height="15.0" fill="rgb(238,110,46)" rx="2" ry="2" />
<text  x="1192.81" y="207.5" ></text>
</g>
<g >
<title>PyLong_FromSsize_t (1,031,099,713 samples, 0.85%)</title><rect x="27.1" y="1093" width="10.0" height="15.0" fill="rgb(238,23,53)" rx="2" ry="2" />
<text  x="30.09" y="1103.5" ></text>
</g>
<g >
<title>perf_event_context_sched_out (43,011,014 samples, 0.04%)</title><rect x="776.4" y="917" width="0.4" height="15.0" fill="rgb(245,130,39)" rx="2" ry="2" />
<text  x="779.42" y="927.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (164,158,675 samples, 0.14%)</title><rect x="32.5" y="1045" width="1.6" height="15.0" fill="rgb(238,126,20)" rx="2" ry="2" />
<text  x="35.50" y="1055.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (42,722,959 samples, 0.04%)</title><rect x="45.9" y="949" width="0.4" height="15.0" fill="rgb(206,83,28)" rx="2" ry="2" />
<text  x="48.92" y="959.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (42,996,891 samples, 0.04%)</title><rect x="54.3" y="533" width="0.4" height="15.0" fill="rgb(233,220,3)" rx="2" ry="2" />
<text  x="57.27" y="543.5" ></text>
</g>
<g >
<title>tick_sched_timer (85,959,082 samples, 0.07%)</title><rect x="775.6" y="997" width="0.8" height="15.0" fill="rgb(219,96,30)" rx="2" ry="2" />
<text  x="778.58" y="1007.5" ></text>
</g>
<g >
<title>py::_load_unlocked:&lt;frozen importlib._bootstrap&gt; (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="421" width="0.2" height="15.0" fill="rgb(217,62,34)" rx="2" ry="2" />
<text  x="1192.81" y="431.5" ></text>
</g>
<g >
<title>rcmd_af (687,266,514 samples, 0.57%)</title><rect x="48.8" y="869" width="6.7" height="15.0" fill="rgb(251,212,30)" rx="2" ry="2" />
<text  x="51.83" y="879.5" ></text>
</g>
<g >
<title>schedule (48,580,038 samples, 0.04%)</title><rect x="36.7" y="965" width="0.4" height="15.0" fill="rgb(241,70,51)" rx="2" ry="2" />
<text  x="39.66" y="975.5" ></text>
</g>
<g >
<title>vma_adjust_trans_huge (43,771,249 samples, 0.04%)</title><rect x="22.4" y="1045" width="0.4" height="15.0" fill="rgb(226,125,46)" rx="2" ry="2" />
<text  x="25.40" y="1055.5" ></text>
</g>
<g >
<title>all (121,209,950,772 samples, 100%)</title><rect x="10.0" y="1365" width="1180.0" height="15.0" fill="rgb(215,121,20)" rx="2" ry="2" />
<text  x="13.00" y="1375.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (42,913,400 samples, 0.04%)</title><rect x="776.8" y="1061" width="0.5" height="15.0" fill="rgb(232,138,12)" rx="2" ry="2" />
<text  x="779.84" y="1071.5" ></text>
</g>
<g >
<title>type_call (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="213" width="0.2" height="15.0" fill="rgb(220,160,31)" rx="2" ry="2" />
<text  x="1192.81" y="223.5" ></text>
</g>
<g >
<title>PyCMethod_New (42,813,898 samples, 0.04%)</title><rect x="46.3" y="1045" width="0.4" height="15.0" fill="rgb(217,55,6)" rx="2" ry="2" />
<text  x="49.33" y="1055.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (42,996,891 samples, 0.04%)</title><rect x="54.3" y="517" width="0.4" height="15.0" fill="rgb(211,35,24)" rx="2" ry="2" />
<text  x="57.27" y="527.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="741" width="0.2" height="15.0" fill="rgb(229,174,47)" rx="2" ry="2" />
<text  x="1192.81" y="751.5" ></text>
</g>
<g >
<title>run_eval_code_obj (119,697,365,071 samples, 98.75%)</title><rect x="24.5" y="1221" width="1165.3" height="15.0" fill="rgb(241,175,25)" rx="2" ry="2" />
<text  x="27.53" y="1231.5" >run_eval_code_obj</text>
</g>
<g >
<title>__free_one_page (43,656,201 samples, 0.04%)</title><rect x="23.7" y="965" width="0.4" height="15.0" fill="rgb(238,186,24)" rx="2" ry="2" />
<text  x="26.68" y="975.5" ></text>
</g>
<g >
<title>rw_verify_area (42,981,368 samples, 0.04%)</title><rect x="54.7" y="773" width="0.4" height="15.0" fill="rgb(242,214,49)" rx="2" ry="2" />
<text  x="57.68" y="783.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="981" width="0.2" height="15.0" fill="rgb(252,83,42)" rx="2" ry="2" />
<text  x="1192.81" y="991.5" ></text>
</g>
<g >
<title>builtin_print (1,115,455,060 samples, 0.92%)</title><rect x="46.3" y="1109" width="10.9" height="15.0" fill="rgb(225,82,26)" rx="2" ry="2" />
<text  x="49.33" y="1119.5" ></text>
</g>
<g >
<title>PyObject_Malloc (42,813,898 samples, 0.04%)</title><rect x="46.3" y="1013" width="0.4" height="15.0" fill="rgb(250,99,8)" rx="2" ry="2" />
<text  x="49.33" y="1023.5" ></text>
</g>
<g >
<title>prepare_task_switch (48,580,038 samples, 0.04%)</title><rect x="36.7" y="933" width="0.4" height="15.0" fill="rgb(227,120,28)" rx="2" ry="2" />
<text  x="39.66" y="943.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (43,011,014 samples, 0.04%)</title><rect x="776.4" y="885" width="0.4" height="15.0" fill="rgb(236,94,2)" rx="2" ry="2" />
<text  x="779.42" y="895.5" ></text>
</g>
<g >
<title>long_richcompare (42,377,291,133 samples, 34.96%)</title><rect x="777.3" y="1093" width="412.5" height="15.0" fill="rgb(252,27,34)" rx="2" ry="2" />
<text  x="780.26" y="1103.5" >long_richcompare</text>
</g>
<g >
<title>x86_pmu_disable (43,011,014 samples, 0.04%)</title><rect x="776.4" y="901" width="0.4" height="15.0" fill="rgb(254,95,35)" rx="2" ry="2" />
<text  x="779.42" y="911.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="1061" width="0.2" height="15.0" fill="rgb(228,171,49)" rx="2" ry="2" />
<text  x="1192.81" y="1071.5" ></text>
</g>
<g >
<title>n_tty_write (386,634,751 samples, 0.32%)</title><rect x="50.9" y="709" width="3.8" height="15.0" fill="rgb(236,220,13)" rx="2" ry="2" />
<text  x="53.92" y="719.5" ></text>
</g>
<g >
<title>_PyRun_AnyFileObject (119,697,365,071 samples, 98.75%)</title><rect x="24.5" y="1285" width="1165.3" height="15.0" fill="rgb(216,107,29)" rx="2" ry="2" />
<text  x="27.53" y="1295.5" >_PyRun_AnyFileObject</text>
</g>
<g >
<title>irqentry_exit (43,011,014 samples, 0.04%)</title><rect x="776.4" y="1045" width="0.4" height="15.0" fill="rgb(241,188,15)" rx="2" ry="2" />
<text  x="779.42" y="1055.5" ></text>
</g>
<g >
<title>py::&lt;listcomp&gt;:/home/pete/go/src/github.com/peter-mcconnell/petermcconnell.com/assets/dummy/perf_py_proj/before.py (1,509,831,796 samples, 1.25%)</title><rect x="24.5" y="1141" width="14.7" height="15.0" fill="rgb(230,95,24)" rx="2" ry="2" />
<text  x="27.53" y="1151.5" ></text>
</g>
<g >
<title>object_vacall (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="533" width="0.2" height="15.0" fill="rgb(222,26,21)" rx="2" ry="2" />
<text  x="1192.81" y="543.5" ></text>
</g>
<g >
<title>clear_page_rep (219,705,622 samples, 0.18%)</title><rect x="34.1" y="901" width="2.1" height="15.0" fill="rgb(205,82,37)" rx="2" ry="2" />
<text  x="37.09" y="911.5" ></text>
</g>
<g >
<title>__vma_adjust (43,771,249 samples, 0.04%)</title><rect x="22.4" y="1061" width="0.4" height="15.0" fill="rgb(244,194,37)" rx="2" ry="2" />
<text  x="25.40" y="1071.5" ></text>
</g>
<g >
<title>schedule (43,011,014 samples, 0.04%)</title><rect x="776.4" y="981" width="0.4" height="15.0" fill="rgb(241,23,54)" rx="2" ry="2" />
<text  x="779.42" y="991.5" ></text>
</g>
<g >
<title>py::&lt;module&gt;:&lt;frozen _collections_abc&gt; (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="309" width="0.2" height="15.0" fill="rgb(226,152,41)" rx="2" ry="2" />
<text  x="1192.81" y="319.5" ></text>
</g>
<g >
<title>PyBytes_FromStringAndSize (42,977,570 samples, 0.04%)</title><rect x="55.5" y="997" width="0.4" height="15.0" fill="rgb(226,90,11)" rx="2" ry="2" />
<text  x="58.52" y="1007.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="389" width="0.2" height="15.0" fill="rgb(251,83,32)" rx="2" ry="2" />
<text  x="1192.81" y="399.5" ></text>
</g>
<g >
<title>__queue_work (257,981,569 samples, 0.21%)</title><rect x="52.2" y="629" width="2.5" height="15.0" fill="rgb(222,55,20)" rx="2" ry="2" />
<text  x="55.17" y="639.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (42,722,959 samples, 0.04%)</title><rect x="45.9" y="917" width="0.4" height="15.0" fill="rgb(246,163,38)" rx="2" ry="2" />
<text  x="48.92" y="927.5" ></text>
</g>
<g >
<title>PyEval_SaveThread (42,808,775 samples, 0.04%)</title><rect x="48.4" y="853" width="0.4" height="15.0" fill="rgb(205,131,8)" rx="2" ry="2" />
<text  x="51.41" y="863.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (43,011,014 samples, 0.04%)</title><rect x="776.4" y="997" width="0.4" height="15.0" fill="rgb(213,61,51)" rx="2" ry="2" />
<text  x="779.42" y="1007.5" ></text>
</g>
<g >
<title>timekeeping_update (42,913,400 samples, 0.04%)</title><rect x="776.8" y="965" width="0.5" height="15.0" fill="rgb(205,158,29)" rx="2" ry="2" />
<text  x="779.84" y="975.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (43,716,009 samples, 0.04%)</title><rect x="22.8" y="997" width="0.5" height="15.0" fill="rgb(228,190,40)" rx="2" ry="2" />
<text  x="25.83" y="1007.5" ></text>
</g>
<g >
<title>dict_tp_clear (612,107,502 samples, 0.50%)</title><rect x="18.1" y="1221" width="6.0" height="15.0" fill="rgb(220,176,41)" rx="2" ry="2" />
<text  x="21.15" y="1231.5" ></text>
</g>
<g >
<title>PyLong_FromSsize_t (42,808,514 samples, 0.04%)</title><rect x="47.2" y="885" width="0.4" height="15.0" fill="rgb(223,105,21)" rx="2" ry="2" />
<text  x="50.16" y="895.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="277" width="0.2" height="15.0" fill="rgb(254,36,33)" rx="2" ry="2" />
<text  x="1192.81" y="287.5" ></text>
</g>
<g >
<title>py::run_dummy:/home/pete/go/src/github.com/peter-mcconnell/petermcconnell.com/assets/dummy/perf_py_proj/before.py (118,187,533,275 samples, 97.51%)</title><rect x="39.2" y="1141" width="1150.6" height="15.0" fill="rgb(224,145,21)" rx="2" ry="2" />
<text  x="42.23" y="1151.5" >py::run_dummy:/home/pete/go/src/github.com/peter-mcconnell/petermcconnell.com/assets/dummy/perf_py_proj/before.py</text>
</g>
<g >
<title>select_task_rq_fair (128,948,837 samples, 0.11%)</title><rect x="53.0" y="565" width="1.3" height="15.0" fill="rgb(234,92,48)" rx="2" ry="2" />
<text  x="56.01" y="575.5" ></text>
</g>
<g >
<title>py::_find_and_load_unlocked:&lt;frozen importlib._bootstrap&gt; (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="469" width="0.2" height="15.0" fill="rgb(242,103,8)" rx="2" ry="2" />
<text  x="1192.81" y="479.5" ></text>
</g>
<g >
<title>exc_page_fault (164,158,675 samples, 0.14%)</title><rect x="32.5" y="1029" width="1.6" height="15.0" fill="rgb(250,152,46)" rx="2" ry="2" />
<text  x="35.50" y="1039.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (42,996,891 samples, 0.04%)</title><rect x="54.3" y="565" width="0.4" height="15.0" fill="rgb(225,40,33)" rx="2" ry="2" />
<text  x="57.27" y="575.5" ></text>
</g>
<g >
<title>PyObject_Free (43,829,509 samples, 0.04%)</title><rect x="18.1" y="1189" width="0.5" height="15.0" fill="rgb(245,163,19)" rx="2" ry="2" />
<text  x="21.15" y="1199.5" ></text>
</g>
<g >
<title>pymain_init (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="1285" width="0.2" height="15.0" fill="rgb(252,123,34)" rx="2" ry="2" />
<text  x="1192.81" y="1295.5" ></text>
</g>
<g >
<title>do_user_addr_fault (263,329,707 samples, 0.22%)</title><rect x="34.1" y="1029" width="2.6" height="15.0" fill="rgb(235,121,23)" rx="2" ry="2" />
<text  x="37.09" y="1039.5" ></text>
</g>
<g >
<title>py::_load_unlocked:&lt;frozen importlib._bootstrap&gt; (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="709" width="0.2" height="15.0" fill="rgb(238,6,26)" rx="2" ry="2" />
<text  x="1192.81" y="719.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="677" width="0.2" height="15.0" fill="rgb(248,104,13)" rx="2" ry="2" />
<text  x="1192.81" y="687.5" ></text>
</g>
<g >
<title>_PySys_GetAttr (42,762,073 samples, 0.04%)</title><rect x="56.8" y="1093" width="0.4" height="15.0" fill="rgb(216,14,20)" rx="2" ry="2" />
<text  x="59.77" y="1103.5" ></text>
</g>
<g >
<title>perf_event_context_sched_out (48,580,038 samples, 0.04%)</title><rect x="36.7" y="901" width="0.4" height="15.0" fill="rgb(215,66,37)" rx="2" ry="2" />
<text  x="39.66" y="911.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="149" width="0.2" height="15.0" fill="rgb(213,126,37)" rx="2" ry="2" />
<text  x="1192.81" y="159.5" ></text>
</g>
<g >
<title>new_sync_write (558,371,070 samples, 0.46%)</title><rect x="49.2" y="773" width="5.5" height="15.0" fill="rgb(233,50,48)" rx="2" ry="2" />
<text  x="52.25" y="783.5" ></text>
</g>
<g >
<title>PyObject_Malloc (895,734,617 samples, 0.74%)</title><rect x="28.4" y="1077" width="8.7" height="15.0" fill="rgb(236,32,6)" rx="2" ry="2" />
<text  x="31.41" y="1087.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="645" width="0.2" height="15.0" fill="rgb(237,40,45)" rx="2" ry="2" />
<text  x="1192.81" y="655.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (901,179,896 samples, 0.74%)</title><rect x="46.7" y="1013" width="8.8" height="15.0" fill="rgb(233,175,48)" rx="2" ry="2" />
<text  x="49.75" y="1023.5" ></text>
</g>
<g >
<title>alloc_pages_vma (87,468,606 samples, 0.07%)</title><rect x="32.5" y="933" width="0.8" height="15.0" fill="rgb(243,85,25)" rx="2" ry="2" />
<text  x="35.50" y="943.5" ></text>
</g>
<g >
<title>tty_insert_flip_string_and_push_buffer (386,634,751 samples, 0.32%)</title><rect x="50.9" y="661" width="3.8" height="15.0" fill="rgb(252,194,44)" rx="2" ry="2" />
<text  x="53.92" y="671.5" ></text>
</g>
<g >
<title>gc_collect_main (1,050,979,230 samples, 0.87%)</title><rect x="13.9" y="1237" width="10.2" height="15.0" fill="rgb(207,183,16)" rx="2" ry="2" />
<text  x="16.87" y="1247.5" ></text>
</g>
<g >
<title>_nss_dns_gethostbyaddr2_r (174,809,621 samples, 0.14%)</title><rect x="22.4" y="1173" width="1.7" height="15.0" fill="rgb(210,156,26)" rx="2" ry="2" />
<text  x="25.40" y="1183.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (42,913,400 samples, 0.04%)</title><rect x="776.8" y="1077" width="0.5" height="15.0" fill="rgb(216,127,43)" rx="2" ry="2" />
<text  x="779.84" y="1087.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (42,722,959 samples, 0.04%)</title><rect x="45.9" y="1061" width="0.4" height="15.0" fill="rgb(222,65,50)" rx="2" ry="2" />
<text  x="48.92" y="1071.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (858,419,481 samples, 0.71%)</title><rect x="47.2" y="917" width="8.3" height="15.0" fill="rgb(210,102,14)" rx="2" ry="2" />
<text  x="50.16" y="927.5" ></text>
</g>
<g >
<title>PyObject_GetBuffer (42,763,673 samples, 0.04%)</title><rect x="47.6" y="885" width="0.4" height="15.0" fill="rgb(206,184,10)" rx="2" ry="2" />
<text  x="50.58" y="895.5" ></text>
</g>
<g >
<title>update_process_times (42,722,959 samples, 0.04%)</title><rect x="45.9" y="997" width="0.4" height="15.0" fill="rgb(221,18,26)" rx="2" ry="2" />
<text  x="48.92" y="1007.5" ></text>
</g>
<g >
<title>type_new (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="85" width="0.2" height="15.0" fill="rgb(240,171,11)" rx="2" ry="2" />
<text  x="1192.81" y="95.5" ></text>
</g>
<g >
<title>PyGC_Collect (397,925,016 samples, 0.33%)</title><rect x="10.0" y="1269" width="3.9" height="15.0" fill="rgb(237,130,23)" rx="2" ry="2" />
<text  x="13.00" y="1279.5" ></text>
</g>
<g >
<title>__schedule (48,580,038 samples, 0.04%)</title><rect x="36.7" y="949" width="0.4" height="15.0" fill="rgb(214,170,7)" rx="2" ry="2" />
<text  x="39.66" y="959.5" ></text>
</g>
<g >
<title>do_tty_write (472,352,719 samples, 0.39%)</title><rect x="50.1" y="725" width="4.6" height="15.0" fill="rgb(223,13,1)" rx="2" ry="2" />
<text  x="53.09" y="735.5" ></text>
</g>
<g >
<title>__do_munmap (174,809,621 samples, 0.14%)</title><rect x="22.4" y="1093" width="1.7" height="15.0" fill="rgb(216,179,49)" rx="2" ry="2" />
<text  x="25.40" y="1103.5" ></text>
</g>
<g >
<title>tick_sched_timer (42,913,400 samples, 0.04%)</title><rect x="776.8" y="1013" width="0.5" height="15.0" fill="rgb(214,136,38)" rx="2" ry="2" />
<text  x="779.84" y="1023.5" ></text>
</g>
<g >
<title>Py_InitializeFromConfig (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="1269" width="0.2" height="15.0" fill="rgb(208,161,54)" rx="2" ry="2" />
<text  x="1192.81" y="1279.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (48,580,038 samples, 0.04%)</title><rect x="36.7" y="981" width="0.4" height="15.0" fill="rgb(231,47,8)" rx="2" ry="2" />
<text  x="39.66" y="991.5" ></text>
</g>
<g >
<title>handle_pte_fault (263,329,707 samples, 0.22%)</title><rect x="34.1" y="981" width="2.6" height="15.0" fill="rgb(213,181,48)" rx="2" ry="2" />
<text  x="37.09" y="991.5" ></text>
</g>
<g >
<title>builtin_exec (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="341" width="0.2" height="15.0" fill="rgb(221,97,39)" rx="2" ry="2" />
<text  x="1192.81" y="351.5" ></text>
</g>
<g >
<title>__handle_mm_fault (263,329,707 samples, 0.22%)</title><rect x="34.1" y="997" width="2.6" height="15.0" fill="rgb(223,220,41)" rx="2" ry="2" />
<text  x="37.09" y="1007.5" ></text>
</g>
<g >
<title>py::_find_and_load_unlocked:&lt;frozen importlib._bootstrap&gt; (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="757" width="0.2" height="15.0" fill="rgb(218,50,28)" rx="2" ry="2" />
<text  x="1192.81" y="767.5" ></text>
</g>
<g >
<title>_PyObject_GenericGetAttrWithDict (42,813,898 samples, 0.04%)</title><rect x="46.3" y="1061" width="0.4" height="15.0" fill="rgb(234,153,21)" rx="2" ry="2" />
<text  x="49.33" y="1071.5" ></text>
</g>
<g >
<title>_io_FileIO_write (772,847,294 samples, 0.64%)</title><rect x="48.0" y="885" width="7.5" height="15.0" fill="rgb(252,193,3)" rx="2" ry="2" />
<text  x="51.00" y="895.5" ></text>
</g>
<g >
<title>do_user_addr_fault (87,468,606 samples, 0.07%)</title><rect x="32.5" y="1013" width="0.8" height="15.0" fill="rgb(241,138,45)" rx="2" ry="2" />
<text  x="35.50" y="1023.5" ></text>
</g>
<g >
<title>default_send_IPI_single_phys (42,996,891 samples, 0.04%)</title><rect x="54.3" y="501" width="0.4" height="15.0" fill="rgb(224,90,41)" rx="2" ry="2" />
<text  x="57.27" y="511.5" ></text>
</g>
<g >
<title>pyrun_file (119,697,365,071 samples, 98.75%)</title><rect x="24.5" y="1253" width="1165.3" height="15.0" fill="rgb(249,149,10)" rx="2" ry="2" />
<text  x="27.53" y="1263.5" >pyrun_file</text>
</g>
<g >
<title>_PyTime_AsTimespec_clamp (42,758,572 samples, 0.04%)</title><rect x="56.4" y="949" width="0.4" height="15.0" fill="rgb(233,192,54)" rx="2" ry="2" />
<text  x="59.36" y="959.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (43,011,014 samples, 0.04%)</title><rect x="776.4" y="1077" width="0.4" height="15.0" fill="rgb(208,196,12)" rx="2" ry="2" />
<text  x="779.42" y="1087.5" ></text>
</g>
<g >
<title>finalize_modules (1,094,636,800 samples, 0.90%)</title><rect x="13.9" y="1269" width="10.6" height="15.0" fill="rgb(208,64,18)" rx="2" ry="2" />
<text  x="16.87" y="1279.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="501" width="0.2" height="15.0" fill="rgb(230,97,17)" rx="2" ry="2" />
<text  x="1192.81" y="511.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="565" width="0.2" height="15.0" fill="rgb(208,53,32)" rx="2" ry="2" />
<text  x="1192.81" y="575.5" ></text>
</g>
<g >
<title>PyObject_Call (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="133" width="0.2" height="15.0" fill="rgb(208,164,53)" rx="2" ry="2" />
<text  x="1192.81" y="143.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="453" width="0.2" height="15.0" fill="rgb(205,123,44)" rx="2" ry="2" />
<text  x="1192.81" y="463.5" ></text>
</g>
<g >
<title>do_anonymous_page (160,782,555 samples, 0.13%)</title><rect x="37.1" y="1013" width="1.6" height="15.0" fill="rgb(250,50,51)" rx="2" ry="2" />
<text  x="40.13" y="1023.5" ></text>
</g>
<g >
<title>insert_work (257,981,569 samples, 0.21%)</title><rect x="52.2" y="613" width="2.5" height="15.0" fill="rgb(235,6,27)" rx="2" ry="2" />
<text  x="55.17" y="623.5" ></text>
</g>
<g >
<title>builtin_exec (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="917" width="0.2" height="15.0" fill="rgb(205,100,34)" rx="2" ry="2" />
<text  x="1192.81" y="927.5" ></text>
</g>
<g >
<title>scheduler_tick (42,722,959 samples, 0.04%)</title><rect x="45.9" y="981" width="0.4" height="15.0" fill="rgb(207,6,21)" rx="2" ry="2" />
<text  x="48.92" y="991.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="1013" width="0.2" height="15.0" fill="rgb(252,157,52)" rx="2" ry="2" />
<text  x="1192.81" y="1023.5" ></text>
</g>
<g >
<title>_io_BufferedWriter_write (85,721,623 samples, 0.07%)</title><rect x="55.9" y="965" width="0.9" height="15.0" fill="rgb(254,185,46)" rx="2" ry="2" />
<text  x="58.94" y="975.5" ></text>
</g>
<g >
<title>py::&lt;module&gt;:&lt;frozen os&gt; (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="597" width="0.2" height="15.0" fill="rgb(234,15,13)" rx="2" ry="2" />
<text  x="1192.81" y="607.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (43,011,014 samples, 0.04%)</title><rect x="776.4" y="933" width="0.4" height="15.0" fill="rgb(226,179,11)" rx="2" ry="2" />
<text  x="779.42" y="943.5" ></text>
</g>
<g >
<title>PyImport_Import (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="1205" width="0.2" height="15.0" fill="rgb(212,90,43)" rx="2" ry="2" />
<text  x="1192.81" y="1215.5" ></text>
</g>
<g >
<title>PyMemoryView_FromBuffer (42,760,415 samples, 0.04%)</title><rect x="46.7" y="917" width="0.5" height="15.0" fill="rgb(223,81,33)" rx="2" ry="2" />
<text  x="49.75" y="927.5" ></text>
</g>
<g >
<title>PyObject_Free (174,680,304 samples, 0.14%)</title><rect x="20.7" y="1173" width="1.7" height="15.0" fill="rgb(207,56,24)" rx="2" ry="2" />
<text  x="23.70" y="1183.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="933" width="0.2" height="15.0" fill="rgb(244,202,11)" rx="2" ry="2" />
<text  x="1192.81" y="943.5" ></text>
</g>
<g >
<title>wake_up_process (257,981,569 samples, 0.21%)</title><rect x="52.2" y="597" width="2.5" height="15.0" fill="rgb(228,131,33)" rx="2" ry="2" />
<text  x="55.17" y="607.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (43,042,399 samples, 0.04%)</title><rect x="52.6" y="565" width="0.4" height="15.0" fill="rgb(218,187,17)" rx="2" ry="2" />
<text  x="55.59" y="575.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="293" width="0.2" height="15.0" fill="rgb(252,21,7)" rx="2" ry="2" />
<text  x="1192.81" y="303.5" ></text>
</g>
<g >
<title>split_huge_pmd_address (43,771,249 samples, 0.04%)</title><rect x="22.4" y="1029" width="0.4" height="15.0" fill="rgb(227,75,3)" rx="2" ry="2" />
<text  x="25.40" y="1039.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (42,913,400 samples, 0.04%)</title><rect x="776.8" y="1045" width="0.5" height="15.0" fill="rgb(217,75,49)" rx="2" ry="2" />
<text  x="779.84" y="1055.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="325" width="0.2" height="15.0" fill="rgb(238,229,17)" rx="2" ry="2" />
<text  x="1192.81" y="335.5" ></text>
</g>
<g >
<title>_Py_write (42,808,775 samples, 0.04%)</title><rect x="48.4" y="869" width="0.4" height="15.0" fill="rgb(251,200,6)" rx="2" ry="2" />
<text  x="51.41" y="879.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (42,722,959 samples, 0.04%)</title><rect x="45.9" y="1109" width="0.4" height="15.0" fill="rgb(232,148,25)" rx="2" ry="2" />
<text  x="48.92" y="1119.5" ></text>
</g>
<g >
<title>py::_find_and_load_unlocked:&lt;frozen importlib._bootstrap&gt; (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="1045" width="0.2" height="15.0" fill="rgb(239,78,1)" rx="2" ry="2" />
<text  x="1192.81" y="1055.5" ></text>
</g>
<g >
<title>PyFile_WriteObject (42,813,898 samples, 0.04%)</title><rect x="46.3" y="1093" width="0.4" height="15.0" fill="rgb(227,104,23)" rx="2" ry="2" />
<text  x="49.33" y="1103.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (85,959,082 samples, 0.07%)</title><rect x="775.6" y="1061" width="0.8" height="15.0" fill="rgb(252,136,46)" rx="2" ry="2" />
<text  x="778.58" y="1071.5" ></text>
</g>
<g >
<title>_Py_dict_lookup (42,762,073 samples, 0.04%)</title><rect x="56.8" y="1061" width="0.4" height="15.0" fill="rgb(212,168,52)" rx="2" ry="2" />
<text  x="59.77" y="1071.5" ></text>
</g>
<g >
<title>__fget_light (42,953,710 samples, 0.04%)</title><rect x="48.8" y="789" width="0.4" height="15.0" fill="rgb(212,13,42)" rx="2" ry="2" />
<text  x="51.83" y="799.5" ></text>
</g>
<g >
<title>free_unref_page_list (43,656,201 samples, 0.04%)</title><rect x="23.7" y="1013" width="0.4" height="15.0" fill="rgb(241,204,22)" rx="2" ry="2" />
<text  x="26.68" y="1023.5" ></text>
</g>
<g >
<title>native_write_msr (43,011,014 samples, 0.04%)</title><rect x="776.4" y="869" width="0.4" height="15.0" fill="rgb(242,124,32)" rx="2" ry="2" />
<text  x="779.42" y="879.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (118,187,533,275 samples, 97.51%)</title><rect x="39.2" y="1125" width="1150.6" height="15.0" fill="rgb(216,141,34)" rx="2" ry="2" />
<text  x="42.23" y="1135.5" >_PyEval_EvalFrameDefault</text>
</g>
<g >
<title>do_syscall_64 (644,306,148 samples, 0.53%)</title><rect x="48.8" y="837" width="6.3" height="15.0" fill="rgb(236,33,15)" rx="2" ry="2" />
<text  x="51.83" y="847.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="1029" width="0.2" height="15.0" fill="rgb(230,71,23)" rx="2" ry="2" />
<text  x="1192.81" y="1039.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (131,038,372 samples, 0.11%)</title><rect x="22.8" y="1061" width="1.3" height="15.0" fill="rgb(213,133,9)" rx="2" ry="2" />
<text  x="25.83" y="1071.5" ></text>
</g>
<g >
<title>prepare_task_switch (43,011,014 samples, 0.04%)</title><rect x="776.4" y="949" width="0.4" height="15.0" fill="rgb(215,163,19)" rx="2" ry="2" />
<text  x="779.42" y="959.5" ></text>
</g>
<g >
<title>exc_page_fault (215,674,643 samples, 0.18%)</title><rect x="37.1" y="1093" width="2.1" height="15.0" fill="rgb(234,216,16)" rx="2" ry="2" />
<text  x="40.13" y="1103.5" ></text>
</g>
<g >
<title>get_page_from_freelist (263,329,707 samples, 0.22%)</title><rect x="34.1" y="917" width="2.6" height="15.0" fill="rgb(209,149,20)" rx="2" ry="2" />
<text  x="37.09" y="927.5" ></text>
</g>
<g >
<title>py::_find_and_load:&lt;frozen importlib._bootstrap&gt; (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="517" width="0.2" height="15.0" fill="rgb(244,32,26)" rx="2" ry="2" />
<text  x="1192.81" y="527.5" ></text>
</g>
<g >
<title>vfs_write (601,352,438 samples, 0.50%)</title><rect x="49.2" y="789" width="5.9" height="15.0" fill="rgb(252,7,30)" rx="2" ry="2" />
<text  x="52.25" y="799.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (48,580,038 samples, 0.04%)</title><rect x="36.7" y="997" width="0.4" height="15.0" fill="rgb(245,30,20)" rx="2" ry="2" />
<text  x="39.66" y="1007.5" ></text>
</g>
<g >
<title>perf_event_task_tick (42,722,959 samples, 0.04%)</title><rect x="45.9" y="965" width="0.4" height="15.0" fill="rgb(240,213,34)" rx="2" ry="2" />
<text  x="48.92" y="975.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (48,580,038 samples, 0.04%)</title><rect x="36.7" y="1013" width="0.4" height="15.0" fill="rgb(238,173,0)" rx="2" ry="2" />
<text  x="39.66" y="1023.5" ></text>
</g>
<g >
<title>rmqueue (43,624,085 samples, 0.04%)</title><rect x="36.2" y="901" width="0.5" height="15.0" fill="rgb(241,199,18)" rx="2" ry="2" />
<text  x="39.23" y="911.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="613" width="0.2" height="15.0" fill="rgb(229,205,43)" rx="2" ry="2" />
<text  x="1192.81" y="623.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (117,203,325 samples, 0.10%)</title><rect x="37.6" y="965" width="1.1" height="15.0" fill="rgb(214,3,18)" rx="2" ry="2" />
<text  x="40.55" y="975.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (174,809,621 samples, 0.14%)</title><rect x="22.4" y="1157" width="1.7" height="15.0" fill="rgb(226,74,9)" rx="2" ry="2" />
<text  x="25.40" y="1167.5" ></text>
</g>
<g >
<title>free_keys_object (612,107,502 samples, 0.50%)</title><rect x="18.1" y="1205" width="6.0" height="15.0" fill="rgb(232,33,27)" rx="2" ry="2" />
<text  x="21.15" y="1215.5" ></text>
</g>
<g >
<title>copy_user_generic_string (85,717,968 samples, 0.07%)</title><rect x="50.1" y="709" width="0.8" height="15.0" fill="rgb(208,156,2)" rx="2" ry="2" />
<text  x="53.09" y="719.5" ></text>
</g>
<g >
<title>native_read_msr (48,580,038 samples, 0.04%)</title><rect x="36.7" y="837" width="0.4" height="15.0" fill="rgb(214,215,39)" rx="2" ry="2" />
<text  x="39.66" y="847.5" ></text>
</g>
<g >
<title>apparmor_file_permission (42,981,368 samples, 0.04%)</title><rect x="54.7" y="757" width="0.4" height="15.0" fill="rgb(228,80,14)" rx="2" ry="2" />
<text  x="57.68" y="767.5" ></text>
</g>
<g >
<title>visit_decref (438,871,728 samples, 0.36%)</title><rect x="13.9" y="1205" width="4.2" height="15.0" fill="rgb(242,28,3)" rx="2" ry="2" />
<text  x="16.87" y="1215.5" ></text>
</g>
<g >
<title>func_dealloc (43,657,570 samples, 0.04%)</title><rect x="24.1" y="1221" width="0.4" height="15.0" fill="rgb(236,132,17)" rx="2" ry="2" />
<text  x="27.11" y="1231.5" ></text>
</g>
<g >
<title>tick_sched_handle (42,722,959 samples, 0.04%)</title><rect x="45.9" y="1013" width="0.4" height="15.0" fill="rgb(232,53,44)" rx="2" ry="2" />
<text  x="48.92" y="1023.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="1077" width="0.2" height="15.0" fill="rgb(226,39,13)" rx="2" ry="2" />
<text  x="1192.81" y="1087.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="853" width="0.2" height="15.0" fill="rgb(252,63,0)" rx="2" ry="2" />
<text  x="1192.81" y="863.5" ></text>
</g>
<g >
<title>update_process_times (42,962,073 samples, 0.04%)</title><rect x="776.0" y="965" width="0.4" height="15.0" fill="rgb(225,175,1)" rx="2" ry="2" />
<text  x="779.00" y="975.5" ></text>
</g>
<g >
<title>py::ABCMeta.__new__:&lt;frozen abc&gt; (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="165" width="0.2" height="15.0" fill="rgb(230,208,3)" rx="2" ry="2" />
<text  x="1192.81" y="175.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (43,011,014 samples, 0.04%)</title><rect x="776.4" y="1061" width="0.4" height="15.0" fill="rgb(250,162,41)" rx="2" ry="2" />
<text  x="779.42" y="1071.5" ></text>
</g>
<g >
<title>wake_affine (85,907,605 samples, 0.07%)</title><rect x="53.4" y="549" width="0.9" height="15.0" fill="rgb(241,2,32)" rx="2" ry="2" />
<text  x="56.43" y="559.5" ></text>
</g>
<g >
<title>__vm_munmap (174,809,621 samples, 0.14%)</title><rect x="22.4" y="1109" width="1.7" height="15.0" fill="rgb(206,191,15)" rx="2" ry="2" />
<text  x="25.40" y="1119.5" ></text>
</g>
<g >
<title>try_to_wake_up (257,981,569 samples, 0.21%)</title><rect x="52.2" y="581" width="2.5" height="15.0" fill="rgb(208,11,38)" rx="2" ry="2" />
<text  x="55.17" y="591.5" ></text>
</g>
<g >
<title>alloc_pages_vma (263,329,707 samples, 0.22%)</title><rect x="34.1" y="949" width="2.6" height="15.0" fill="rgb(247,102,2)" rx="2" ry="2" />
<text  x="37.09" y="959.5" ></text>
</g>
<g >
<title>cfunction_vectorcall_FASTCALL_KEYWORDS (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="1173" width="0.2" height="15.0" fill="rgb(229,127,42)" rx="2" ry="2" />
<text  x="1192.81" y="1183.5" ></text>
</g>
<g >
<title>py::_find_and_load:&lt;frozen importlib._bootstrap&gt; (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="805" width="0.2" height="15.0" fill="rgb(224,187,36)" rx="2" ry="2" />
<text  x="1192.81" y="815.5" ></text>
</g>
<g >
<title>pud_val (54,892,088 samples, 0.05%)</title><rect x="38.7" y="1045" width="0.5" height="15.0" fill="rgb(221,157,24)" rx="2" ry="2" />
<text  x="41.69" y="1055.5" ></text>
</g>
<g >
<title>irqentry_exit (48,580,038 samples, 0.04%)</title><rect x="36.7" y="1029" width="0.4" height="15.0" fill="rgb(216,215,29)" rx="2" ry="2" />
<text  x="39.66" y="1039.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="437" width="0.2" height="15.0" fill="rgb(208,20,1)" rx="2" ry="2" />
<text  x="1192.81" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (644,306,148 samples, 0.53%)</title><rect x="48.8" y="853" width="6.3" height="15.0" fill="rgb(226,143,19)" rx="2" ry="2" />
<text  x="51.83" y="863.5" ></text>
</g>
<g >
<title>PyObject_RichCompareBool (600,322,236 samples, 0.50%)</title><rect x="40.1" y="1109" width="5.8" height="15.0" fill="rgb(209,142,26)" rx="2" ry="2" />
<text  x="43.07" y="1119.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (215,674,643 samples, 0.18%)</title><rect x="37.1" y="1109" width="2.1" height="15.0" fill="rgb(223,115,33)" rx="2" ry="2" />
<text  x="40.13" y="1119.5" ></text>
</g>
<g >
<title>do_anonymous_page (263,329,707 samples, 0.22%)</title><rect x="34.1" y="965" width="2.6" height="15.0" fill="rgb(240,21,31)" rx="2" ry="2" />
<text  x="37.09" y="975.5" ></text>
</g>
<g >
<title>do_anonymous_page (87,468,606 samples, 0.07%)</title><rect x="32.5" y="949" width="0.8" height="15.0" fill="rgb(240,34,31)" rx="2" ry="2" />
<text  x="35.50" y="959.5" ></text>
</g>
<g >
<title>x86_pmu_disable (42,722,959 samples, 0.04%)</title><rect x="45.9" y="933" width="0.4" height="15.0" fill="rgb(216,204,18)" rx="2" ry="2" />
<text  x="48.92" y="943.5" ></text>
</g>
<g >
<title>__vstrfmon_l_internal (121,209,905,865 samples, 100.00%)</title><rect x="10.0" y="1333" width="1180.0" height="15.0" fill="rgb(246,3,26)" rx="2" ry="2" />
<text  x="13.00" y="1343.5" >__vstrfmon_l_internal</text>
</g>
<g >
<title>_PyDict_GetItem_KnownHash (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="53" width="0.2" height="15.0" fill="rgb(230,76,6)" rx="2" ry="2" />
<text  x="1192.81" y="63.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (42,722,959 samples, 0.04%)</title><rect x="45.9" y="1093" width="0.4" height="15.0" fill="rgb(210,119,0)" rx="2" ry="2" />
<text  x="48.92" y="1103.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (42,722,959 samples, 0.04%)</title><rect x="45.9" y="1077" width="0.4" height="15.0" fill="rgb(237,209,14)" rx="2" ry="2" />
<text  x="48.92" y="1087.5" ></text>
</g>
<g >
<title>handle_pte_fault (160,782,555 samples, 0.13%)</title><rect x="37.1" y="1029" width="1.6" height="15.0" fill="rgb(218,119,43)" rx="2" ry="2" />
<text  x="40.13" y="1039.5" ></text>
</g>
<g >
<title>release_pages (131,038,372 samples, 0.11%)</title><rect x="22.8" y="1029" width="1.3" height="15.0" fill="rgb(246,116,38)" rx="2" ry="2" />
<text  x="25.83" y="1039.5" ></text>
</g>
<g >
<title>py::FrozenImporter.exec_module:&lt;frozen importlib._bootstrap&gt; (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="949" width="0.2" height="15.0" fill="rgb(227,44,8)" rx="2" ry="2" />
<text  x="1192.81" y="959.5" ></text>
</g>
<g >
<title>PyEval_EvalCode (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="901" width="0.2" height="15.0" fill="rgb(218,93,5)" rx="2" ry="2" />
<text  x="1192.81" y="911.5" ></text>
</g>
<g >
<title>PyObject_Vectorcall (119,697,365,071 samples, 98.75%)</title><rect x="24.5" y="1157" width="1165.3" height="15.0" fill="rgb(249,153,12)" rx="2" ry="2" />
<text  x="27.53" y="1167.5" >PyObject_Vectorcall</text>
</g>
<g >
<title>__mod_lruvec_state (43,716,009 samples, 0.04%)</title><rect x="22.8" y="1013" width="0.5" height="15.0" fill="rgb(229,48,21)" rx="2" ry="2" />
<text  x="25.83" y="1023.5" ></text>
</g>
<g >
<title>buffered_flush_and_rewind_unlocked (901,179,896 samples, 0.74%)</title><rect x="46.7" y="965" width="8.8" height="15.0" fill="rgb(230,97,14)" rx="2" ry="2" />
<text  x="49.75" y="975.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (174,809,621 samples, 0.14%)</title><rect x="22.4" y="1125" width="1.7" height="15.0" fill="rgb(233,114,20)" rx="2" ry="2" />
<text  x="25.40" y="1135.5" ></text>
</g>
<g >
<title>handle_mm_fault (87,468,606 samples, 0.07%)</title><rect x="32.5" y="997" width="0.8" height="15.0" fill="rgb(211,37,49)" rx="2" ry="2" />
<text  x="35.50" y="1007.5" ></text>
</g>
<g >
<title>__handle_mm_fault (87,468,606 samples, 0.07%)</title><rect x="32.5" y="981" width="0.8" height="15.0" fill="rgb(215,180,48)" rx="2" ry="2" />
<text  x="35.50" y="991.5" ></text>
</g>
<g >
<title>ksys_write (644,306,148 samples, 0.53%)</title><rect x="48.8" y="805" width="6.3" height="15.0" fill="rgb(231,23,52)" rx="2" ry="2" />
<text  x="51.83" y="815.5" ></text>
</g>
<g >
<title>update_wall_time (42,913,400 samples, 0.04%)</title><rect x="776.8" y="981" width="0.5" height="15.0" fill="rgb(246,31,33)" rx="2" ry="2" />
<text  x="779.84" y="991.5" ></text>
</g>
<g >
<title>PyImport_ImportModuleLevelObject (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="1141" width="0.2" height="15.0" fill="rgb(221,156,45)" rx="2" ry="2" />
<text  x="1192.81" y="1151.5" ></text>
</g>
<g >
<title>__pagevec_lru_add_fn (117,203,325 samples, 0.10%)</title><rect x="37.6" y="949" width="1.1" height="15.0" fill="rgb(220,156,38)" rx="2" ry="2" />
<text  x="40.55" y="959.5" ></text>
</g>
<g >
<title>_PyLong_AssignValue (1,074,666,141 samples, 0.89%)</title><rect x="26.7" y="1109" width="10.4" height="15.0" fill="rgb(232,165,53)" rx="2" ry="2" />
<text  x="29.67" y="1119.5" ></text>
</g>
<g >
<title>_PyEval_EvalFrameDefault (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="693" width="0.2" height="15.0" fill="rgb(220,95,51)" rx="2" ry="2" />
<text  x="1192.81" y="703.5" ></text>
</g>
<g >
<title>rmqueue (43,802,228 samples, 0.04%)</title><rect x="32.9" y="901" width="0.4" height="15.0" fill="rgb(219,84,37)" rx="2" ry="2" />
<text  x="35.92" y="911.5" ></text>
</g>
<g >
<title>tick_sched_timer (42,722,959 samples, 0.04%)</title><rect x="45.9" y="1029" width="0.4" height="15.0" fill="rgb(231,131,38)" rx="2" ry="2" />
<text  x="48.92" y="1039.5" ></text>
</g>
<g >
<title>builtin___build_class__ (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="245" width="0.2" height="15.0" fill="rgb(212,62,32)" rx="2" ry="2" />
<text  x="1192.81" y="255.5" ></text>
</g>
<g >
<title>_PyModule_ClearDict (43,657,570 samples, 0.04%)</title><rect x="24.1" y="1253" width="0.4" height="15.0" fill="rgb(249,171,53)" rx="2" ry="2" />
<text  x="27.11" y="1263.5" ></text>
</g>
<g >
<title>_PyObject_MakeTpCall (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="229" width="0.2" height="15.0" fill="rgb(210,115,22)" rx="2" ry="2" />
<text  x="1192.81" y="239.5" ></text>
</g>
<g >
<title>__default_send_IPI_dest_field (42,996,891 samples, 0.04%)</title><rect x="54.3" y="485" width="0.4" height="15.0" fill="rgb(211,60,37)" rx="2" ry="2" />
<text  x="57.27" y="495.5" ></text>
</g>
<g >
<title>PyObject_VectorcallMethod (85,721,623 samples, 0.07%)</title><rect x="55.9" y="997" width="0.9" height="15.0" fill="rgb(213,68,12)" rx="2" ry="2" />
<text  x="58.94" y="1007.5" ></text>
</g>
<g >
<title>allocate_from_new_pool (207,705,324 samples, 0.17%)</title><rect x="32.1" y="1061" width="2.0" height="15.0" fill="rgb(206,44,28)" rx="2" ry="2" />
<text  x="35.07" y="1071.5" ></text>
</g>
<g >
<title>object_vacall (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="1109" width="0.2" height="15.0" fill="rgb(212,161,7)" rx="2" ry="2" />
<text  x="1192.81" y="1119.5" ></text>
</g>
<g >
<title>py::_load_unlocked:&lt;frozen importlib._bootstrap&gt; (19,978,978 samples, 0.02%)</title><rect x="1189.8" y="997" width="0.2" height="15.0" fill="rgb(243,207,4)" rx="2" ry="2" />
<text  x="1192.81" y="1007.5" ></text>
</g>
</g>
</svg>
