<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Peter McConnell</title>
    <link>https://www.petermcconnell.com/</link>
    <description>Recent content on Peter McConnell</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 08 Dec 2022 14:07:06 +0000</lastBuildDate><atom:link href="https://www.petermcconnell.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ChatGPT for software engineers</title>
      <link>https://www.petermcconnell.com/posts/chatgpt_for_engineers/</link>
      <pubDate>Thu, 08 Dec 2022 14:07:06 +0000</pubDate>
      
      <guid>https://www.petermcconnell.com/posts/chatgpt_for_engineers/</guid>
      <description>ChatGPT, the open-source version of the GPT-3 language model developed by OpenAI, has the potential to revolutionize the way senior software engineers approach their daily workflow. With its ability to generate human-like text, ChatGPT can help senior software engineers save time and reduce errors in a variety of tasks, from coding and debugging to documenting and collaborating with colleagues.
One of the key advantages of using ChatGPT is its ability to generate high-quality code.</description>
      <content>&lt;p&gt;ChatGPT, the open-source version of the GPT-3 language model developed by OpenAI, has the potential to revolutionize the way senior software engineers approach their daily workflow. With its ability to generate human-like text, ChatGPT can help senior software engineers save time and reduce errors in a variety of tasks, from coding and debugging to documenting and collaborating with colleagues.&lt;/p&gt;
&lt;p&gt;One of the key advantages of using ChatGPT is its ability to generate high-quality code. Senior software engineers can use ChatGPT to quickly prototype new features, test out different approaches to solving a problem, or even generate entire codebases for new projects. This can save senior software engineers a significant amount of time and allow them to focus on more complex and challenging tasks.&lt;/p&gt;
&lt;p&gt;In addition to generating code, ChatGPT can also help senior software engineers with debugging and troubleshooting. By providing natural language descriptions of bugs and errors, senior software engineers can use ChatGPT to generate possible solutions or workarounds. This can save them the time and frustration of trying to figure out a solution on their own, and allow them to quickly get back to work.&lt;/p&gt;
&lt;p&gt;Another important way that ChatGPT can help senior software engineers is by improving the documentation of their code and projects. With its ability to generate human-like text, ChatGPT can help senior software engineers write clear and concise documentation that is easy for others to understand. This can improve collaboration within teams and ensure that everyone is on the same page when working on a project.&lt;/p&gt;
&lt;p&gt;In conclusion, ChatGPT has the potential to greatly improve the daily workflow of senior software engineers. By helping them generate high-quality code, troubleshoot problems, and write clear documentation, ChatGPT can save senior software engineers time and reduce errors, allowing them to focus on more important tasks.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;this article was generated entirely by ChatGPT&lt;/em&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>chatGPT - building an automated database testing tool</title>
      <link>https://www.petermcconnell.com/posts/ai_db_testing/</link>
      <pubDate>Thu, 08 Dec 2022 11:41:50 +0000</pubDate>
      
      <guid>https://www.petermcconnell.com/posts/ai_db_testing/</guid>
      <description>Creating an automated database testing tool with ChatGPT Last night I thought I&amp;rsquo;d try to get ChatGPT to make an automated database testing tool and the results were quite promising.
In conclusion, with guidance, it was able to build a project from scratch that ran a python script and postgres database. It generated some random schema and values for the randomly generated tables. It provided a Python script which would introspect the database and execute queries against it.</description>
      <content>&lt;h2 id=&#34;creating-an-automated-database-testing-tool-with-chatgpt&#34;&gt;Creating an automated database testing tool with ChatGPT&lt;/h2&gt;
&lt;p&gt;Last night I thought I&amp;rsquo;d try to get ChatGPT to make an automated database
testing tool and the results were quite promising.&lt;/p&gt;
&lt;p&gt;In conclusion, with guidance, it was able to build a project from scratch that
ran a python script and postgres database. It generated some random schema and
values for the randomly generated tables. It provided a Python script which
would introspect the database and execute queries against it.&lt;/p&gt;
&lt;p&gt;Did it all work out of the box? No. There are some bugs to fix in the python
script it generated. However the effort to go in and fix those is not high and
certainly the whole end-to-end process is cheaper, time-wise, compared to
starting from scratch.&lt;/p&gt;
&lt;p&gt;I found that the bugs it encountered were largely due to my lack of clarity or
ordering of questions posed to it. It was quite capable of fixing its own
mistakes / updating the existing code to match the new requirements when
requested to do so.&lt;/p&gt;
&lt;p&gt;The only &lt;em&gt;real&lt;/em&gt; issue I encountered were general API errors that one would
expect of something so popular in an early preview state.&lt;/p&gt;
&lt;p&gt;I came away from this experiment viewing ChatGPT and whatever follows it as a
really useful development aide for those who already know how to program. It
helped me build a tool faster than I could have had I sat down to do it from
scratch. I don&amp;rsquo;t view it as a replacement for software engineers yet for two
main reasons - firstly: for non-trivial applications I suspect the person
feeding requirements into the system (or &amp;ldquo;prompt engineer&amp;rdquo;) needs to have a
reasonable idea of how to build software in the first place, so as to know how
to form requests and to correct mistakes / close gaps. secondly: the code being
generated isn&amp;rsquo;t always sound - without an experienced engineer reviewing and
taking ownership of whatever code is produced (ownership being important for
maintainence reasons) then there&amp;rsquo;s little guarantee that you will get what you
are hoping for.&lt;/p&gt;
&lt;p&gt;However; this is still very early days. Can the problems outlined be closed
further? Absolutely. Will this sort of tooling be &amp;ldquo;bad&amp;rdquo; for software
engineering as a whole, long-term? Perhaps. Personally I&amp;rsquo;m very excited to have
this tool in my arsenal - already it has allowed me to scaffold prototype
applications quickly. Would I use it for production code in a workplace? No
more or less than I would snippets from stackoverflow or it&amp;rsquo;s ilk. For now.&lt;/p&gt;
&lt;p&gt;Github repository: &lt;a href=&#34;https://github.com/peter-mcconnell/gpt_sql_test_generator&#34;&gt;https://github.com/peter-mcconnell/gpt_sql_test_generator&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Screenshots:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/peter-mcconnell/gpt_sql_test_generator/master/media/2.png&#34; alt=&#34;step 2&#34; title=&#34;step 2&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/peter-mcconnell/gpt_sql_test_generator/master/media/3.png&#34; alt=&#34;step 3&#34; title=&#34;step 3&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/peter-mcconnell/gpt_sql_test_generator/master/media/4.png&#34; alt=&#34;step 4&#34; title=&#34;step 4&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/peter-mcconnell/gpt_sql_test_generator/master/media/5.png&#34; alt=&#34;step 5&#34; title=&#34;step 5&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/peter-mcconnell/gpt_sql_test_generator/master/media/6.png&#34; alt=&#34;step 6&#34; title=&#34;step 6&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/peter-mcconnell/gpt_sql_test_generator/master/media/7.png&#34; alt=&#34;step 7&#34; title=&#34;step 7&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/peter-mcconnell/gpt_sql_test_generator/master/media/8.png&#34; alt=&#34;step 8&#34; title=&#34;step 8&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/peter-mcconnell/gpt_sql_test_generator/master/media/9.png&#34; alt=&#34;step 9&#34; title=&#34;step 9&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/peter-mcconnell/gpt_sql_test_generator/master/media/10.png&#34; alt=&#34;step 10&#34; title=&#34;step 10&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/peter-mcconnell/gpt_sql_test_generator/master/media/11.png&#34; alt=&#34;step 11&#34; title=&#34;step 11&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/peter-mcconnell/gpt_sql_test_generator/master/media/12.png&#34; alt=&#34;step 12&#34; title=&#34;step 12&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/peter-mcconnell/gpt_sql_test_generator/master/media/13.png&#34; alt=&#34;step 13&#34; title=&#34;step 13&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/peter-mcconnell/gpt_sql_test_generator/master/media/14.png&#34; alt=&#34;step 14&#34; title=&#34;step 14&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/peter-mcconnell/gpt_sql_test_generator/master/media/15.png&#34; alt=&#34;step 15&#34; title=&#34;step 15&#34;&gt;
&lt;img src=&#34;https://raw.githubusercontent.com/peter-mcconnell/gpt_sql_test_generator/master/media/16.png&#34; alt=&#34;step 16&#34; title=&#34;step 16&#34;&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>chatGPT - building a virtual machine</title>
      <link>https://www.petermcconnell.com/posts/chatgpt/</link>
      <pubDate>Mon, 05 Dec 2022 14:16:04 +0000</pubDate>
      
      <guid>https://www.petermcconnell.com/posts/chatgpt/</guid>
      <description>:mind-blown:
https://www.engraved.blog/building-a-virtual-machine-inside/</description>
      <content>&lt;p&gt;:mind-blown:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.engraved.blog/building-a-virtual-machine-inside/&#34;&gt;https://www.engraved.blog/building-a-virtual-machine-inside/&lt;/a&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Vimtips</title>
      <link>https://www.petermcconnell.com/posts/vimtips/</link>
      <pubDate>Thu, 01 Dec 2022 11:36:49 +0000</pubDate>
      
      <guid>https://www.petermcconnell.com/posts/vimtips/</guid>
      <description>I stumbled across a nice vim tips resource today:
https://thevaluable.dev/vim-advanced/</description>
      <content>&lt;p&gt;I stumbled across a nice vim tips resource today:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://thevaluable.dev/vim-advanced/&#34;&gt;https://thevaluable.dev/vim-advanced/&lt;/a&gt;&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Hugo</title>
      <link>https://www.petermcconnell.com/posts/hugo/</link>
      <pubDate>Tue, 29 Nov 2022 23:16:21 +0000</pubDate>
      
      <guid>https://www.petermcconnell.com/posts/hugo/</guid>
      <description>How I set this website up, for free tldr; Hugo + Github + AWS Amplify. Easy peasy. total time: 1 hour (mostly spent writing content)
Some parameters:
free templates. I&amp;rsquo;m no designer static web asset output is fine. I&amp;rsquo;m not building a backend (yet) but having the option to do so is a bonus this project should be as low effort as possible so; no html / css / js where possible also; automated deploys on push to $branch ideally I don&amp;rsquo;t need to maintain ci to do this.</description>
      <content>&lt;h2 id=&#34;how-i-set-this-website-up-for-free&#34;&gt;How I set this website up, for free&lt;/h2&gt;
&lt;p&gt;tldr; Hugo + Github + AWS Amplify. Easy peasy.
total time: 1 hour (mostly spent writing content)&lt;/p&gt;
&lt;p&gt;Some parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;free templates. I&amp;rsquo;m no designer&lt;/li&gt;
&lt;li&gt;static web asset output is fine. I&amp;rsquo;m not building a backend (yet)
&lt;ul&gt;
&lt;li&gt;but having the option to do so is a bonus&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;this project should be as low effort as possible
&lt;ul&gt;
&lt;li&gt;so; no html / css / js where possible&lt;/li&gt;
&lt;li&gt;also; automated deploys on push to $branch
&lt;ul&gt;
&lt;li&gt;ideally I don&amp;rsquo;t need to maintain ci to do this. lowest poss. effort&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;as cheap to host as possible. free, ideally&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In summary I want to only write page content. No code. No pipelines. No buttons
to click. But I still want uri&amp;rsquo;s, the abililty to render rich media and a pretty
template that I need to do nothing with. And I&amp;rsquo;d like to not pay for any of it.&lt;/p&gt;
&lt;h3 id=&#34;static-web-files&#34;&gt;static web files&lt;/h3&gt;
&lt;p&gt;I&amp;rsquo;ve heard about Hugo for years but never had the opportunity to try it out and
knew from the criteria I had that it should solve getting me the static assets
quickly. Even if it didn&amp;rsquo;t turn out to be the &lt;em&gt;right&lt;/em&gt; tool, I knew
experimentation would be cheap.&lt;/p&gt;
&lt;p&gt;Install was super easy: &lt;a href=&#34;https://gohugo.io/installation/linux/&#34;&gt;https://gohugo.io/installation/linux/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I then jumped over to &lt;a href=&#34;https://gohugo.io/getting-started/quick-start/&#34;&gt;https://gohugo.io/getting-started/quick-start/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This quick start guide felt like all I&amp;rsquo;d need so I went searching for a theme.
The power of search engines brought me to &lt;a href=&#34;https://hugothemesfree.com/&#34;&gt;https://hugothemesfree.com/&lt;/a&gt;. The tags
on the right of this page helped me find the terminal theme quickly
(&lt;a href=&#34;https://hugothemesfree.com/a-simple-retro-theme-for-hugo/&#34;&gt;https://hugothemesfree.com/a-simple-retro-theme-for-hugo/&lt;/a&gt;) which reminded me
of my old i3 + polybar configuration. MIT licensed too. Bingo.&lt;/p&gt;
&lt;p&gt;A few &lt;code&gt;hugo new posts/thing.md&lt;/code&gt; and &lt;code&gt;hugo new otherthing.md&lt;/code&gt;&amp;rsquo;s later and I had
my static website files. I opted to bake the theme into the repo so that I
could mutate the files. Created a new repository
(&lt;a href=&#34;https://github.com/peter-mcconnell/petermcconnell.com&#34;&gt;https://github.com/peter-mcconnell/petermcconnell.com&lt;/a&gt;) and threw my files
there for safe keeping. Now I just needed somewhere to host it.&lt;/p&gt;
&lt;h3 id=&#34;a-search-for-cheap-hosting-solutions&#34;&gt;a search for cheap hosting solutions&lt;/h3&gt;
&lt;p&gt;The most obvious route was github pages but I wanted to look at other options
which offered some extra features should I need them in the future.&lt;/p&gt;
&lt;p&gt;A quick look around lead me to AWS Amplify - a service I admittedly hadn&amp;rsquo;t
heard of before. A quick look over the marketing material
(&lt;a href=&#34;https://aws.amazon.com/getting-started/hands-on/build-serverless-web-app-lambda-apigateway-s3-dynamodb-cognito/module-1/&#34;&gt;https://aws.amazon.com/getting-started/hands-on/build-serverless-web-app-lambda-apigateway-s3-dynamodb-cognito/module-1/&lt;/a&gt;)
looked like it was interesting; Lambda, API Gateway, Dynamo DB - all things
that pluck on my cheap-skate heart strings. Pricing:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://aws.amazon.com/amplify/pricing/&#34;&gt;https://aws.amazon.com/amplify/pricing/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m no Madonna - I think my personal website is probably a safe bet to do
&amp;ldquo;free tier&amp;rdquo; numbers (&amp;lt;500k req.|15Gb egress|100Gb req. duration per month).&lt;/p&gt;
&lt;p&gt;I logged into my personal AWS account, went through the little Amplify setup
wizard, pointed it to my github repo, updated my DNS records to whatever the
wizard was telling me to and voila - &lt;a href=&#34;https://www.petermcconnell.com/&#34;&gt;https://www.petermcconnell.com/&lt;/a&gt; is up and
running.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Skills</title>
      <link>https://www.petermcconnell.com/skills/</link>
      <pubDate>Tue, 29 Nov 2022 20:54:22 +0000</pubDate>
      
      <guid>https://www.petermcconnell.com/skills/</guid>
      <description>https://www.youtube.com/watch?v=dL6kQ0v1PQ8
I&amp;rsquo;m a solid debugger, reasonable systems designer, ok coder &amp;amp; natural leader who leans heavy into automation / giving people the power to do their jobs. I&amp;rsquo;ve worked with enough talent to know I&amp;rsquo;m nothing special; but I have a great track record for being easy to work with and getting shit done be it as an IC, a manager, or a group lead.
Usually never far from:
Linux Python Golang Bash Docker Kubernetes AWS Over 20 years I&amp;rsquo;ve touched a lot of different tech and generally speaking can shake the rust off or learn something new in a week or two.</description>
      <content>&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=dL6kQ0v1PQ8&#34;&gt;https://www.youtube.com/watch?v=dL6kQ0v1PQ8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m a solid debugger, reasonable systems designer, ok coder &amp;amp; natural leader
who leans heavy into automation / giving people the power to do their jobs.
I&amp;rsquo;ve worked with enough talent to know I&amp;rsquo;m nothing special; but I have a great
track record for being easy to work with and getting shit done be it as an IC,
a manager, or a group lead.&lt;/p&gt;
&lt;p&gt;Usually never far from:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux&lt;/li&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;Golang&lt;/li&gt;
&lt;li&gt;Bash&lt;/li&gt;
&lt;li&gt;Docker&lt;/li&gt;
&lt;li&gt;Kubernetes&lt;/li&gt;
&lt;li&gt;AWS&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Over 20 years I&amp;rsquo;ve touched a lot of different tech and generally speaking can
shake the rust off or learn something new in a week or two.&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>Showcase</title>
      <link>https://www.petermcconnell.com/showcase/</link>
      <pubDate>Tue, 29 Nov 2022 20:51:24 +0000</pubDate>
      
      <guid>https://www.petermcconnell.com/showcase/</guid>
      <description>I&amp;rsquo;ve been around for a while and done some things. Even some good things.
helped take two companies to acquisition developed a custom query language (TQL - an opencypher variant) which went to market [ Java. Golang. ANTLR ] added support into the Terraform AWS provider for shipping your own keys to ACM [ Golang ] developed an orchestration framework for researchers in AI to schedule workloads [ Python. Terraform. AWS.</description>
      <content>&lt;p&gt;I&amp;rsquo;ve been around for a while and done some things. Even some good things.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;helped take two companies to acquisition&lt;/li&gt;
&lt;li&gt;developed a custom query language (TQL - an opencypher variant) which went to market
[ Java. Golang. ANTLR ]&lt;/li&gt;
&lt;li&gt;added support into the Terraform AWS provider for shipping your own keys to ACM
[ Golang ]&lt;/li&gt;
&lt;li&gt;developed an orchestration framework for researchers in AI to schedule workloads
[ Python. Terraform. AWS. On-prem (Nvidia DGX&amp;rsquo;s). Qemu. Libvirt ]&lt;/li&gt;
&lt;li&gt;customised redhat&amp;rsquo;s clair product so that it could use internal sources for its vulnerability databases
[ Golang ]&lt;/li&gt;
&lt;li&gt;developed a compliance tool which detects packages for Python, Ruby, R, APT, Yum, APK and assesses their licenses
[ Shell ]&lt;/li&gt;
&lt;li&gt;developed a chatbot which used a large car forum database, bayes theorum and more regular expressions than you can shake a stick at to allow users to talk to cars. in 3 weeks!
[ PHP, Postgres ]&lt;/li&gt;
&lt;li&gt;built a security tool &amp;ldquo;amald&amp;rdquo; which alerts on the event that an endpoint is without authentication. decreased companies time-to-detection for auth misconfigurations
[ Golang ]&lt;/li&gt;
&lt;li&gt;developed an image delivery service for a very large org (30k+ engineers)
[ AWS, Python, Bash/Shell, OpenStack ]&lt;/li&gt;
&lt;li&gt;have worked on web products for Google, Virgin, Red Bull, Disney &amp;amp; YouTube
[ Python. PHP. During my time as a lead at https://www.rehabagency.ai/work ]&lt;/li&gt;
&lt;li&gt;design and build out of various deployment infrastructure
[ Kubernetes. Mesos. Marathon. Docker-compose. ]&lt;/li&gt;
&lt;li&gt;developed a Jira plugin which extended JQL (jira query language) to allow grouping by &amp;ldquo;roles&amp;rdquo;
[ Java ]&lt;/li&gt;
&lt;li&gt;competed in various hackathons and code jams
[ Hacktoberfest, Ludum Dare, Google CTF ]&lt;/li&gt;
&lt;li&gt;mentored many amazing engineers over the years from Junior to Staff&lt;/li&gt;
&lt;li&gt;spoken at various conferences in the UK, Ireland, Australia and the U.S on docker, prometheus, bash, terraform, aws etc&lt;/li&gt;
&lt;li&gt;co-founded an award winning web design company (31interactive)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;20 years working in tech and the above is all the &amp;ldquo;good things&amp;rdquo; I can think of
listing. Imagine how long the &amp;ldquo;bad things&amp;rdquo; list must be ..&lt;/p&gt;
</content>
    </item>
    
    <item>
      <title>About</title>
      <link>https://www.petermcconnell.com/about/</link>
      <pubDate>Tue, 29 Nov 2022 20:36:26 +0000</pubDate>
      
      <guid>https://www.petermcconnell.com/about/</guid>
      <description>$PATH When I was around 9 through some miracle mum brought home a Commodore Amiga. My family never had much growing up but somehow we still got a computer. Little did she know at the time just how big an impact that would have on my life - thanks Mum. I gorged on all the Warez I could get my hands slowly increasing my exposure to programming and hacking. The culture has always felt like home.</description>
      <content>&lt;h2 id=&#34;path&#34;&gt;$PATH&lt;/h2&gt;
&lt;p&gt;When I was around 9 through some miracle mum brought home a Commodore Amiga.
My family never had much growing up but somehow we still got a computer. Little
did she know at the time just how big an impact that would have on my life -
thanks Mum. I gorged on all the Warez I could get my hands slowly increasing
my exposure to programming and hacking. The culture has always felt like home.&lt;/p&gt;
&lt;p&gt;Eventually I had to earn money and knew working with computers was something I
had to do - any other job would feel like work and I didn&amp;rsquo;t much like work. So
with some luck and a sprinkle of white-lies I landed my first web developer
role around 2004 and was hooked.&lt;/p&gt;
&lt;p&gt;Fast forward some years, I&amp;rsquo;m currently posted at firebolt.io where I help
several teams who are focused around automation and running infrastructure. We
have many complex problems to solve but the progress we&amp;rsquo;re making is truly
amazing. Oblig. &amp;ldquo;My views are my own / not representative of my employer&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Outside of work I try to contribute to the community when I can, though spare
time is expensive when you have kids to spend it on. I recently got to speak at
NIDC though which was nice - you can catch it here:
&lt;a href=&#34;https://www.youtube.com/watch?v=hvtZnbDXpzM&amp;amp;t=20063s&#34;&gt;https://www.youtube.com/watch?v=hvtZnbDXpzM&amp;amp;t=20063s&lt;/a&gt;. And indeed, that is a
Final Fantasy VII t-shirt.&lt;/p&gt;
&lt;p&gt;Personal focus has shifted towards performance and systems engineering lately.
In particular, pulling more information out of the kernel to help developers
debug interesting issues is a fascinating topic I&amp;rsquo;m spending more time on. The
problem is, with such tools to hand life seemingly becomes an endless longing
for a process to spin out of control with not a reasonable error in sight.&lt;/p&gt;
&lt;p&gt;If you are looking for me you can find me on Twitter (&lt;a href=&#34;https://twitter.com/&#34;&gt;https://twitter.com/&lt;/a&gt;) or
Github (&lt;a href=&#34;https://github.com/peter-mcconnell)&#34;&gt;https://github.com/peter-mcconnell)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Fun trinkets from along the way:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Amiga_500&#34;&gt;https://en.wikipedia.org/wiki/Amiga_500&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/The_Chaos_Engine&#34;&gt;https://en.wikipedia.org/wiki/The_Chaos_Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Burn_Cycle&#34;&gt;https://en.wikipedia.org/wiki/Burn_Cycle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Macromedia_Flash&#34;&gt;https://en.wikipedia.org/wiki/Macromedia_Flash&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Hackers_(film)&#34;&gt;https://en.wikipedia.org/wiki/Hackers_(film)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=OAI8S2houW4&#34;&gt;https://www.youtube.com/watch?v=OAI8S2houW4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
    <item>
      <title>Current Reading</title>
      <link>https://www.petermcconnell.com/posts/current-reading/</link>
      <pubDate>Tue, 29 Nov 2022 20:30:52 +0000</pubDate>
      
      <guid>https://www.petermcconnell.com/posts/current-reading/</guid>
      <description>The Linux Programming Interface I should have read this years ago. It&amp;rsquo;s a big boi, but if you work around linux or are interested in it - this book is a critical primer on many of the core topics you&amp;rsquo;ll need to really understand what&amp;rsquo;s going on. I binged this book on the first pass over multiple weeks - deliberately skipping implementing the code examples, opting to just read them / ensure I understood them.</description>
      <content>&lt;h2 id=&#34;the-linux-programming-interface&#34;&gt;The Linux Programming Interface&lt;/h2&gt;
&lt;p&gt;I should have read this years ago. It&amp;rsquo;s a big boi, but if you work around linux
or are interested in it - this book is a critical primer on many of the core
topics you&amp;rsquo;ll need to really understand what&amp;rsquo;s going on. I binged this book on
the first pass over multiple weeks - deliberately skipping implementing the
code examples, opting to just read them / ensure I understood them. I choose to
do this so that I could get over as much content as possible, with the view of
circling back over the examples once I&amp;rsquo;m finished The C Programming Language
book so that I can make better decisions about the code I&amp;rsquo;m writing.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://s.cdnshm.com/catalog/pt/t/33820519/linux-programming-interface.jpg&#34; alt=&#34;alt text&#34; title=&#34;Buy it&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.amazon.co.uk/Linux-Programming-Interface-System-Handbook/dp/1593272200&#34;&gt;https://www.amazon.co.uk/Linux-Programming-Interface-System-Handbook/dp/1593272200&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;the-c-programming-language&#34;&gt;The C Programming Language&lt;/h2&gt;
&lt;p&gt;I generally try to avoid taking on multiple books but I figured as the above is
so large and much of the books example code is given in C, then this book which
I&amp;rsquo;m long overdue on would be a nice complement.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s fine. Concise and clear wording; unlike the print quality, unfortunately.
This books print looks like it was hand-painted by a very nervous individual trying
to hit a deadline in the dark. Print-quality aside, I&amp;rsquo;d say this is an
important book to read, but not much of a page-turner. For me the biggest
advantage of the book was seeing syscall libraries in action and also
appreciating more about what cpp gives us.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://m.media-amazon.com/images/I/C1bOAdsnZnS._CR504,0,3024,3024_UX256.jpg&#34; alt=&#34;alt text&#34; title=&#34;Buy it&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.amazon.co.uk/C-Programming-Language-2nd/dp/0131103628&#34;&gt;https://www.amazon.co.uk/C-Programming-Language-2nd/dp/0131103628&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;up-next&#34;&gt;Up next&lt;/h2&gt;
&lt;p&gt;I have two &amp;ldquo;crackers&amp;rdquo; on my desk. Really looking forward to these:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux Kernel Development (&lt;a href=&#34;https://www.amazon.co.uk/Linux-Kernel-Development-Developers-Library/dp/0672329468&#34;&gt;https://www.amazon.co.uk/Linux-Kernel-Development-Developers-Library/dp/0672329468&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Systems Performance (&lt;a href=&#34;https://www.amazon.co.uk/Systems-Performance-Brendan-Gregg/dp/0136820158&#34;&gt;https://www.amazon.co.uk/Systems-Performance-Brendan-Gregg/dp/0136820158&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</content>
    </item>
    
  </channel>
</rss>
